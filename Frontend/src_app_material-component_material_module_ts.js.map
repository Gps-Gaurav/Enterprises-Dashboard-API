{"version":3,"file":"src_app_material-component_material_module_ts.js","mappings":"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","sources":["./src/app/material-component/dialog/category/category.component.ts","./src/app/material-component/dialog/category/category.component.html","./src/app/material-component/dialog/product/product.component.ts","./src/app/material-component/dialog/product/product.component.html","./src/app/material-component/dialog/view-bill-products/view-bill-products.component.ts","./src/app/material-component/dialog/view-bill-products/view-bill-products.component.html","./src/app/material-component/manage-category/manage-category.component.ts","./src/app/material-component/manage-category/manage-category.component.html","./src/app/material-component/manage-order/manage-order.component.ts","./src/app/material-component/manage-order/manage-order.component.html","./src/app/material-component/manage-product/manage-product.component.ts","./src/app/material-component/manage-product/manage-product.component.html","./src/app/material-component/manage-user/manage-user.component.ts","./src/app/material-component/manage-user/manage-user.component.html","./src/app/material-component/material.module.ts","./src/app/material-component/material.routing.ts","./src/app/material-component/view-bill/view-bill.component.ts","./src/app/material-component/view-bill/view-bill.component.html","./src/app/material-component/view-category/view-category.component.ts","./src/app/material-component/view-category/view-category.component.html","./src/app/material-component/view-product/view-product.component.ts","./src/app/material-component/view-product/view-product.component.html","./src/app/services/bill.service.ts","./src/app/services/category.service.ts","./src/app/services/product.service.ts","./node_modules/file-saver/dist/FileSaver.min.js"],"sourcesContent":["\nimport { Component, OnInit, Inject, EventEmitter} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA,MatDialogRef } from '@angular/material/dialog';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { GlobalConstants } from 'src/app/shared/global-constrants';\n\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.component.html',\n  styleUrls: ['./category.component.scss']\n})\nexport class CategoryComponent implements OnInit {\n\n  onAddCategory = new EventEmitter();\n  onEditCategory = new EventEmitter();\n\n  categoryForm :any = FormGroup;\n  dialogAction:any =\"Add\";\n  action:any=\"Add\";\n  responseMessage:any;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public dialogData:any,\n  private formBuilder:FormBuilder,\n  private categoryServices: CategoryService,\n  private ngxServices: NgxUiLoaderService,\nprivate dialogRef: MatDialogRef<CategoryComponent>,\n  private snackbarServices: SnackbarService\n  ) { }\n\n\n  ngOnInit(): void {\n    this.categoryForm=this.formBuilder.group({\n      name :[null,[Validators.required]]\n    });\n    if(this.dialogData.action==='Edit'){\n      this.dialogAction = \"Edit\";\n      this.action=\"update\";\n      this.categoryForm.patchValue(this.dialogData.data);\n\n    }\n  }\n\n   handleSubmit(){\n    if(this.dialogAction ===\"Edit\"){\n    this.edit();\n\n    }\n    else{\n      this.add();\n    }\n   }\n   add(){\n    var formData = this.categoryForm.value;\n    var data = {\n      name :formData.name\n    }\n    this.categoryServices.add(data).subscribe((response:any)=>{\n      this.dialogRef.close();\n      this.onAddCategory.emit();\n      this.responseMessage = response.message;\n      this.snackbarServices.openSnackbar(this.responseMessage,\"success\")\n    },(error:any)=>{\n\n    this.ngxServices.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n\n      }\n      this.snackbarServices.openSnackbar(this.responseMessage, GlobalConstants.error);\n    })\n\n\n   }\n   edit(){\n  var formData = this.categoryForm.value;\n    var data = {\n      id :this.dialogData.data.id,\n      name :formData.name\n    }\n    this.categoryServices.update(data).subscribe((response:any)=>{\n      this.dialogRef.close();\n      this.onEditCategory.emit();\n      this.responseMessage = response.message;\n      this.snackbarServices.openSnackbar(this.responseMessage,\"success\")\n    },(error:any)=>{\n\n    this.ngxServices.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n\n      }\n      this.snackbarServices.openSnackbar(this.responseMessage, GlobalConstants.error);\n    })\n\n   }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row fxlayout=\"row\">\n    <span class=\"tille-center\">{{dialogData.action}} Category</span>\n  </mat-toolbar-row>\n</mat-toolbar>\n<mat-dialog-content class=\"mat-typography\">\n  <form [formGroup]=\"categoryForm\">\n    <div fxFlex fxLayout=\"column\">\n\n      <mat-form-field appearance=\"fill\" fxFlex>\n        <mat-label>name</mat-label>\n        <input matInput formControlName=\"name\" required>\n        <mat-error *ngIf=\"categoryForm.controls.name.touched && categoryForm.controls.name.invalid\">\n          <span *ngIf=\"categoryForm.controls.name.errors.required\">This field is mandatory. </span>\n          <span *ngIf=\"categoryForm.controls.name.errors.pattern\">This field is invalid. </span>\n        </mat-error>\n      </mat-form-field>\n\n    </div>\n\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"center\">\n\n  <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"handleSubmit() \"\n    [disabled]=\"!(categoryForm.valid && categoryForm.dirty)\">{{action}}</button>\n  <button mat-raised-button colour=\"primary\" mat-dialog-close>Close</button>\n\n</mat-dialog-actions>\n","import { Component, EventEmitter, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { ProductService } from 'src/app/services/product.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { GlobalConstants } from 'src/app/shared/global-constrants';\nimport { CategoryService } from 'src/app/services/category.service';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.component.html',\n  styleUrls: ['./product.component.scss']\n})\nexport class ProductComponent implements OnInit {\n  onAddProduct = new EventEmitter();\n  onEditProduct = new EventEmitter();\n\n  ProductForm: any = FormGroup;\n  dialogAction: any = \"Add\";\n  action: any = \"Add\";\n  responseMessage: any;\n  categorys: any = [];\n\n  constructor(@Inject(MAT_DIALOG_DATA) public dialogData: any,\n    private formBuilder: FormBuilder,\n    private productServices: ProductService,\n    private categoryServices: CategoryService,\n    private ngxServices: NgxUiLoaderService,\n    public dialogRef: MatDialogRef<ProductComponent>,\n    private snackbarServices: SnackbarService\n  ) { }\n\n\n  ngOnInit(): void {\n    this.ProductForm = this.formBuilder.group({\n      name: [null, [Validators.required], Validators.pattern(GlobalConstants.nameRegex)],\n      categoryId: [null, [Validators.required]],\n      price: [null, [Validators.required]],\n      description: [null, [Validators.required]],\n    });\n    if (this.dialogData.action === 'Edit') {\n      this.dialogAction = \"Edit\";\n      this.action = \"update\";\n      this.ProductForm.patchValue(this.dialogData.data);\n\n    }\n    this.getCategorys();\n  }\n  getCategorys() {\n    this.categoryServices.getCategory().subscribe((response: any) => {\n      this.categorys = response;\n    }, (error: any) => {\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n      }\n      else {\n        this.responseMessage = GlobalConstants.genericError;\n      }\n      this.snackbarServices.openSnackbar(this.responseMessage, GlobalConstants.error);\n\n    })\n  }\n  handleSubmit() {\n    if (this.dialogAction === \"Edit\") {\n      this.edit();\n\n    }\n    else {\n      this.add();\n    }\n  }\n  add() {\n    var formData = this.ProductForm.value;\n    var data = {\n      name: formData.name,\n      categoryId: formData.categoryId,\n      price: formData.price,\n      description: formData.description,\n    }\n    this.productServices.add(data).subscribe((response: any) => {\n      this.dialogRef.close();\n      this.onAddProduct.emit();\n      this.responseMessage = response.message;\n      this.snackbarServices.openSnackbar(this.responseMessage, \"success\")\n    }, (error: any) => {\n\n      this.ngxServices.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n\n      }\n      this.snackbarServices.openSnackbar(this.responseMessage, GlobalConstants.error);\n    })\n\n\n  }\n  edit() {\n    var formData = this.ProductForm.value;\n    var data = {\n      id: this.dialogData.data.id,\n      name: formData.name,\n      categoryId: formData.categoryId,\n      price: formData.price,\n      description: formData.description\n    }\n    this.productServices.update(data).subscribe((response: any) => {\n      this.dialogRef.close();\n      this.onEditProduct.emit();\n      this.responseMessage = response.message;\n      this.snackbarServices.openSnackbar(this.responseMessage, \"success\")\n    }, (error: any) => {\n\n      this.ngxServices.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n\n      }\n      this.snackbarServices.openSnackbar(this.responseMessage, GlobalConstants.error);\n    })\n\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row fxlayout=\"row\">\n    <span class=\"tille-center\">{{dialogData.action}} Product</span>\n  </mat-toolbar-row>\n</mat-toolbar>\n<mat-dialog-content class=\"mat-typography\">\n  <form [formGroup]=\"ProductForm\">\n    <div fxFlex fxLayout=\"column\">\n\n      <div fxLayout=\"row wrap\">\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>name</mat-label>\n          <input matInput formControlName=\"name\" required>\n          <mat-error *ngIf=\"ProductForm.controls.name.touched && ProductForm.controls.name.invalid\">\n            <span *ngIf=\"ProductForm.controls.name.errors.required\">This field is mandatory. </span>\n            <span *ngIf=\"ProductForm.controls.name.errors.pattern\">This field is invalid. </span>\n          </mat-error>\n        </mat-form-field>\n      </div>\n\n\n      <div fxLayout=\"row wrap\">\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Price</mat-label>\n          <input matInput formControlName=\"price\" required>\n          <mat-error *ngIf=\"ProductForm.controls.price.touched && ProductForm.controls.price.invalid\">\n            <span *ngIf=\"ProductForm.controls.price.errors.required\">This field is mandatory. </span>\n            <span *ngIf=\"ProductForm.controls.price.errors.pattern\">This field is invalid. </span>\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Category</mat-label>\n          <mat-select formControlName=\"categoryId\">\n            <mat-option *ngFor=\"let category of categorys\" [value]=\"category.id\">{{category.name}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n\n      <div fxLayout=\"row wrap\">\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Description </mat-label>\n          <input matInput formControlName=\"description\" required>\n          <mat-error *ngIf=\"ProductForm.controls.description.touched && ProductForm.controls.description.invalid\">\n            <span *ngIf=\"ProductForm.controls.description.errors.required\">This field is mandatory. </span>\n            <span *ngIf=\"ProductForm.controls.description.errors.pattern\">This field is invalid. </span>\n          </mat-error>\n        </mat-form-field>\n      </div>\n\n\n    </div>\n  </form>\n\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"center\">\n\n  <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"handleSubmit() \">{{action}}</button>\n    <!-- [disabled]=\"!(ProductForm.valid && ProductForm.dirty)\" -->\n\n  <button mat-raised-button colour=\"primary\" mat-dialog-close>Close</button>\n\n</mat-dialog-actions>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\n\n@Component({\n  selector: 'app-view-bill-products',\n  templateUrl: './view-bill-products.component.html',\n  styleUrls: ['./view-bill-products.component.scss']\n})\nexport class ViewBillProductsComponent implements OnInit {\n  displayedColumns: string[] = ['name', 'category', 'price', 'quantity', 'total'];\n  dataSource: any[] = [];\n  data: any;\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public dialogData: any,\n    private dialogRef: MatDialogRef<ViewBillProductsComponent>,\n    private snackbarService: SnackbarService\n  ) { }\n\n  ngOnInit() {\n    try {\n      // Store the dialog data\n      this.data = this.dialogData.data;\n      console.log('Dialog Data:', this.data); // Debug log\n\n      // Parse product details\n      if (this.data && this.data.productDetails) {\n        if (typeof this.data.productDetails === 'string') {\n          this.dataSource = JSON.parse(this.data.productDetails);\n        } else if (Array.isArray(this.data.productDetails)) {\n          this.dataSource = this.data.productDetails;\n        } else {\n          throw new Error('Invalid product details format');\n        }\n        console.log('Parsed Product Details:', this.dataSource); // Debug log\n      } else {\n        throw new Error('No product details found');\n      }\n    } catch (error) {\n      console.error('Error processing product details:', error);\n      this.snackbarService.openSnackbar('Error loading product details', 'error');\n      this.dataSource = [];\n    }\n  }\n\n  // Helper method to calculate total amount\n  getTotalAmount(): number {\n    return this.dataSource.reduce((sum, item) =>\n      sum + (parseFloat(item.total) || 0), 0\n    );\n  }\n\n  // Helper method to check if data is available\n  hasData(): boolean {\n    return Array.isArray(this.dataSource) && this.dataSource.length > 0;\n  }\n\n  // Format currency values\n  formatPrice(price: any): string {\n    return `₹${parseFloat(price).toFixed(2)}`;\n  }\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row fxLayout=\"row\">\n    <span class=\"title-center\">View Bill</span>\n    <span class=\"spacer\"></span>\n    <button class=\"mat-dialog-close\" mat-icon-button mat-dialog-close>\n      <mat-icon>cancel</mat-icon>\n    </button>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-dialog-content class=\"mat-typography\">\n  <!-- Customer Details -->\n  <table id=\"customers\" *ngIf=\"data\">\n    <tr>\n      <td><b>Name: </b>{{data.name || 'N/A'}}</td>\n      <td><b>Email: </b>{{data.email || 'N/A'}}</td>\n    </tr>\n    <tr>\n      <td><b>Contact Number: </b>{{data.contactNumber || 'N/A'}}</td>\n      <td><b>Payment Method: </b>{{data.paymentMethod || 'N/A'}}</td>\n    </tr>\n  </table>\n\n  <!-- Products Table -->\n  <div class=\"responsive_table\">\n    <div *ngIf=\"!hasData()\" class=\"no-data-message\">\n      No product details available\n    </div>\n\n    <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\" *ngIf=\"hasData()\">\n      <ng-container matColumnDef=\"name\">\n        <th mat-header-cell *matHeaderCellDef>Name</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"category\">\n        <th mat-header-cell *matHeaderCellDef>Category</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.category}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"price\">\n        <th mat-header-cell *matHeaderCellDef>Price</th>\n        <td mat-cell *matCellDef=\"let element\">{{formatPrice(element.price)}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"quantity\">\n        <th mat-header-cell *matHeaderCellDef>Quantity</th>\n        <td mat-cell *matCellDef=\"let element\">{{element.quantity}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"total\">\n        <th mat-header-cell *matHeaderCellDef>Total</th>\n        <td mat-cell *matCellDef=\"let element\">{{formatPrice(element.total)}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n\n    <!-- Total Amount -->\n    <div class=\"total-section\" *ngIf=\"hasData()\">\n      <h3>Total Amount: {{formatPrice(getTotalAmount())}}</h3>\n    </div>\n  </div>\n</mat-dialog-content>\n","import { Component, OnInit } from '@angular/core';\nimport { CategoryComponent } from '../dialog/category/category.component';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { error } from 'console';\nimport { GlobalConstants } from 'src/app/shared/global-constrants';\nimport { Router } from '@angular/router';\nimport { ConfirmationComponent } from '../dialog/confirmation/confirmation.component';\n\n@Component({\n  selector: 'app-manage-category',\n  templateUrl: './manage-category.component.html',\n  styleUrls: ['./manage-category.component.scss']\n})\nexport class ManageCategoryComponent implements OnInit {\n  displayedColumns: string[] = ['name', 'edit'];\n  dataSource: any;\n  responseMessage: any;\n\n\n  constructor(private categoryServices: CategoryService,\n    private ngxServices: NgxUiLoaderService,\n    private dialog: MatDialog,\n    private snackbarServices: SnackbarService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.ngxServices.start()\n    this.tableData()\n  }\n  tableData() {\n    this.categoryServices.getCategory().subscribe((response: any) => {\n      this.ngxServices.stop();\n      this.dataSource = new MatTableDataSource(response);\n    }, (error: any) => {\n      this.ngxServices.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n\n      }\n      this.snackbarServices.openSnackbar(this.responseMessage, GlobalConstants.error);\n    })\n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  handleAddAction() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      action: 'Add'\n    }\n    dialogConfig.width = \"850px\";\n    const dialogRef = this.dialog.open(CategoryComponent, dialogConfig);\n    this.router.events.subscribe(() => {\n      dialogRef.close();\n\n    });\n    const sub = dialogRef.componentInstance.onAddCategory.subscribe((response) => {\n      this.tableData()\n    })\n  }\n  handleEditAction(values : any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      action: 'Edit',\n      data:values\n    }\n    dialogConfig.width = \"850px\";\n    const dialogRef = this.dialog.open(CategoryComponent, dialogConfig);\n    this.router.events.subscribe(() => {\n      dialogRef.close();\n\n    });\n    const sub = dialogRef.componentInstance.onEditCategory.subscribe((response) => {\n      this.tableData()\n    })\n  }\n  handleDeleteAction(values: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      message: 'delete' + values.name + 'product'\n    }\n    const dialogRef = this.dialog.open(ConfirmationComponent, dialogConfig);\n    const sub = dialogRef.componentInstance.onEmitStatuschange.subscribe((response) => {\n      this.ngxServices.start();\n      this.deleteProduct(values.id)\n      dialogRef.close();\n    })\n  }\n\n  deleteProduct(id: any) {\n    this.categoryServices.delete(id).subscribe((response: any) => {\n      this.ngxServices.stop();\n      this.tableData();\n      this.responseMessage = response?.message;\n      this.snackbarServices.openSnackbar(this.responseMessage, \"success\");\n    }\n      , (error: any) => {\n        this.ngxServices.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n\n        }\n        this.snackbarServices.openSnackbar(this.responseMessage, GlobalConstants.error);\n      })\n\n\n  }\n}\n","<mat-card>\n  <b><span>Manage Category</span></b>\n  <button mat-flat-button color=\"primary\" class=\"float-right\" (click)=\"handleAddAction()\">Add Category</button>\n</mat-card>\n<hr>\n<mat-card>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" #input>\n  </mat-form-field>\n</mat-card>\n<hr>\n<div class=\"responsive_table\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"edit\">\n      <th mat-header-cell *matHeaderCellDef>Action</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\n        <button mat-icon-button color=\"primary\" matTooltip=\"Edit\" (click)=\"handleEditAction(element)\">\n          <mat-icon>edit</mat-icon>\n        </button>\n        <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"handleDeleteAction(element)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns:displayedColumns; sticky:true\"></tr>\n\n  </table>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { saveAs } from 'file-saver';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { BillService } from 'src/app/services/bill.service';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { GlobalConstants } from 'src/app/shared/global-constrants';\n\n\n@Component({\n  selector: 'app-manage-order',\n  templateUrl: './manage-order.component.html',\n  styleUrls: ['./manage-order.component.scss']\n})\nexport class ManageOrderComponent implements OnInit {\n\n  displayedColumns: string[] = ['name', 'category', 'price', 'quantity', 'total', 'edit'];\n  dataSource: any = [];\n  manageOrderForm: any = FormGroup;\n  categorys: any = [];\n  products: any = [];\n  price: any;\n  totalAmount: number = 0;\n  responseMessage: any;\n\n\n  constructor(private formBuilder: FormBuilder,\n    private productServices: ProductService,\n    private categoryService: CategoryService,\n    private billService: BillService,\n    private ngxServices: NgxUiLoaderService,\n    private dialog: MatDialog,\n    private snackbarServices: SnackbarService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.ngxServices.start();\n    this.getCategory();\n    this.manageOrderForm = this.formBuilder.group({\n      name: [null, [Validators.required, Validators.pattern(GlobalConstants.nameRegex)]],\n      email: [null, [Validators.required, Validators.pattern(GlobalConstants.emailRegex)]],\n      contactNumber: [null, [Validators.required, Validators.pattern(GlobalConstants.contactNumberRegex)]],\n      paymentMethod: [null, [Validators.required]],\n      product: [null, [Validators.required]],\n      category: [null, [Validators.required]],\n      quantity: [null, [Validators.required]],\n      price: [null, [Validators.required]],\n      total: [0, [Validators.required]],\n\n    })\n    this.manageOrderForm.get('category').valueChanges.subscribe((value: any) => {\n      if (value) {\n        this.getProductByCategory(value);\n      }\n    });\n\n    this.manageOrderForm.get('product').valueChanges.subscribe((value: any) => {\n      if (value) {\n        this.getProductDetails(value);\n      }\n    });\n  }\n\n  getCategory() {\n    this.categoryService.getCategory().subscribe((response: any) => {\n      this.ngxServices.stop();\n      this.categorys = response;\n    }\n      , (error: any) => {\n        this.ngxServices.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n\n        }\n        this.snackbarServices.openSnackbar(this.responseMessage, GlobalConstants.error);\n      })\n\n  }\n  getProductByCategory(value: any) {\n    // Add loading state\n    this.ngxServices.start(); // Add this line\n\n    this.productServices.getProductByCategory(value.id).subscribe({\n      next: (response: any) => {\n        this.products = response;\n        this.manageOrderForm.controls['price'].setValue('');\n        this.manageOrderForm.controls['quantity'].setValue('');\n        this.manageOrderForm.controls['total'].setValue(0);\n        this.ngxServices.stop(); // Stop loading\n      },\n      error: (error: any) => {\n        this.ngxServices.stop();\n        this.responseMessage = error.error?.message || GlobalConstants.genericError;\n        this.snackbarServices.openSnackbar(this.responseMessage, GlobalConstants.error);\n      }\n    });\n  }\n\n  getProductDetails(value: any) {\n    // Input validation\n    if (!value || !value.id) {\n      this.snackbarServices.openSnackbar('Invalid product selection', GlobalConstants.error);\n      return;\n    }\n\n    // Start loading indicator\n    this.ngxServices.start();\n\n    this.productServices.getById(value.id).subscribe({\n      next: (response: any) => {\n        if (!response || typeof response.price !== 'number') {\n          throw new Error('Invalid product data received');\n        }\n\n        this.price = response.price;\n\n        // Update form controls safely using patchValue\n        this.manageOrderForm.patchValue({\n          price: response.price,\n          quantity: '1',\n          total: response.price * 1\n        });\n\n        this.ngxServices.stop();\n      },\n      error: (error: any) => {\n        console.error('Error fetching product details:', error);\n        this.ngxServices.stop();\n\n        this.responseMessage = error.error?.message || GlobalConstants.genericError;\n        this.snackbarServices.openSnackbar(this.responseMessage, GlobalConstants.error);\n\n        // Reset form values on error\n        this.manageOrderForm.patchValue({\n          price: null,\n          quantity: null,\n          total: 0\n        });\n      },\n      complete: () => {\n        this.ngxServices.stop();\n      }\n    });\n  }\n  serQuantity(value: any) {\n    var temp = this.manageOrderForm.controls['quantity'].value;\n    if (temp > 0) {\n      this.manageOrderForm.controls['total'].setValue(this.manageOrderForm.controls['quantity'].value * this.manageOrderForm.controls['price'].value)\n    }\n    else if (temp != '') {\n      this.manageOrderForm.controls['quantity'].setValue(1);\n      this.manageOrderForm.controls['total'].setValue(this.manageOrderForm.controls['quantity'].value * this.manageOrderForm.controls['price'].value)\n    }\n  }\n\n  validateProductAdd() {\n    if (this.manageOrderForm.controls['total'].value === 0 || this.manageOrderForm.controls['total'].value === null || this.manageOrderForm.controls['quantity'].value <= 0)\n      return true;\n    else\n      return false;\n  }\n\n  add() {\n\n    var formData = this.manageOrderForm.value;\n    var productName = this.dataSource.find((e: { id: number; }) => e.id == formData.product.id);\n    if (productName === undefined) {\n      this.totalAmount = this.totalAmount + formData.total;\n\n      this.dataSource.push({\n        id: formData.product.id, name: formData.product.name, category: formData.category.name,\n        quantity: formData.quantity, price: formData.price, total: formData.total\n      })\n\n      this.dataSource = [...this.dataSource];\n      this.snackbarServices.openSnackbar(GlobalConstants.productAdded, \"success\");\n    }\n    else {\n      this.snackbarServices.openSnackbar(GlobalConstants.productExistError, GlobalConstants.error);\n    }\n\n  }\n  handleDeleteAction(value: any, element: any) {\n    this.totalAmount = this.totalAmount - element.total;\n    this.dataSource.splice(value, 1);\n    this.dataSource = [...this.dataSource]\n  }\n  submitAction() {\n    if (this.validateSubmit()) {\n      this.snackbarServices.openSnackbar('Please fill all required fields', GlobalConstants.error);\n      return;\n    }\n\n    this.ngxServices.start();\n\n    // Create order data\n    const formData = this.manageOrderForm.value;\n    const orderData = {\n      name: formData.name,\n      email: formData.email,\n      contactNumber: formData.contactNumber,\n      paymentMethod: formData.paymentMethod,\n      totalAmount: this.totalAmount,\n      // Send productDetails as is, don't stringify it here\n      productDetails: this.dataSource\n    };\n\n    this.billService.generateReport(orderData).subscribe({\n      next: (response: any) => {\n        if (response?.uuid) {\n          this.downloadFile(response.uuid);\n          this.resetForm();\n          this.snackbarServices.openSnackbar('Order placed successfully', 'success');\n        }\n      },\n      error: (error: any) => {\n        console.error('Order submission error:', error);\n        this.ngxServices.stop();\n        const errorMessage = error.error?.message || GlobalConstants.genericError;\n        this.snackbarServices.openSnackbar(errorMessage, GlobalConstants.error);\n      },\n      complete: () => {\n        this.ngxServices.stop();\n      }\n    });\n  }\n\n  // Helper method to reset the form\n  private resetForm(): void {\n    this.manageOrderForm.reset();\n    this.dataSource = [];\n    this.totalAmount = 0;\n\n    // Reset to initial state\n    this.manageOrderForm.patchValue({\n      name: null,\n      email: null,\n      contactNumber: null,\n      paymentMethod: null,\n      product: null,\n      category: null,\n      quantity: null,\n      price: null,\n      total: 0\n    });\n  }\n\n  // Improved validation method\n  public validateSubmit(): boolean {\n    if (!this.manageOrderForm) return true;\n\n    const requiredFields = ['name', 'email', 'contactNumber', 'paymentMethod'];\n    const hasEmptyFields = requiredFields.some(field => {\n      const control = this.manageOrderForm.get(field);\n      return !control || !control.value || control.invalid;\n    });\n\n    return hasEmptyFields || this.totalAmount <= 0;\n\n  }\n\n\n  downloadFile(fileName: any) {\n    var data = {\n      uuid: fileName\n    }\n    this.billService.getPdf(data).subscribe((response: any) => {\n      saveAs(response, fileName + '.pdf');\n      this.ngxServices.stop();\n    })\n  }\n\n}\n","<mat-card>\n  <b><span>Manage Order</span></b>\n  <button mat-flat-button\n        color=\"primary\"\n        class=\"float-right\"\n        [disabled]=\"validateSubmit()\"\n        (click)=\"submitAction()\">\n  Submit & Get Bill\n</button>\n</mat-card>\n<hr>\n<mat-card>\n  <b><span>Customer Details</span></b>\n  <form [formGroup]=\"manageOrderForm\">\n    <div fxFlex fxLayout=\"column\">\n      <div fxLayout=\"row wrap\">\n        <!-- Name field -->\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Name</mat-label>\n          <input matInput formControlName=\"name\" required>\n          <mat-error *ngIf=\"manageOrderForm.get('name')?.touched && manageOrderForm.get('name')?.invalid\">\n            <span *ngIf=\"manageOrderForm.get('name')?.errors?.['required']\">This field is mandatory.</span>\n            <span *ngIf=\"manageOrderForm.get('name')?.errors?.['pattern']\">This field is invalid.</span>\n          </mat-error>\n        </mat-form-field>\n\n        <!-- Email field -->\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Email</mat-label>\n          <input matInput formControlName=\"email\" required>\n          <mat-error *ngIf=\"manageOrderForm.get('email')?.touched && manageOrderForm.get('email')?.invalid\">\n            <span *ngIf=\"manageOrderForm.get('email')?.errors?.['required']\">This field is mandatory.</span>\n            <span *ngIf=\"manageOrderForm.get('email')?.errors?.['pattern']\">This field is invalid.</span>\n          </mat-error>\n        </mat-form-field>\n\n        <!-- Contact Number field -->\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Contact Number</mat-label>\n          <input matInput formControlName=\"contactNumber\" required>\n          <mat-error *ngIf=\"manageOrderForm.get('contactNumber')?.touched && manageOrderForm.get('contactNumber')?.invalid\">\n            <span *ngIf=\"manageOrderForm.get('contactNumber')?.errors?.['required']\">This field is mandatory.</span>\n            <span *ngIf=\"manageOrderForm.get('contactNumber')?.errors?.['pattern']\">This field is invalid.</span>\n          </mat-error>\n        </mat-form-field>\n\n        <!-- Payment Method field -->\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Payment Method</mat-label>\n          <mat-select formControlName=\"paymentMethod\" required>\n            <mat-option value=\"Cash\">Cash</mat-option>\n            <mat-option value=\"Debit Card\">Debit Card</mat-option>\n            <mat-option value=\"Credit Card\">Credit Card</mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"manageOrderForm.get('paymentMethod')?.touched && manageOrderForm.get('paymentMethod')?.invalid\">\n            <span *ngIf=\"manageOrderForm.get('paymentMethod')?.errors?.['required']\">Please select a payment method.</span>\n          </mat-error>\n        </mat-form-field>\n      </div>\n    </div>\n  </form>\n</mat-card>\n<hr>\n<mat-card>\n  <b><span>Select Product </span></b>\n  <form [formGroup]=\"manageOrderForm\">\n    <div fxFlex fxLayout=\"column\">\n      <div fxLayout=\"row-wrap\">\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Category</mat-label>\n          <mat-select formControlName=\"category\" (selectionChange)=\"getProductByCategory($event.value)\">\n            <mat-option *ngFor=\"let category of categorys\" [value]=\"category\">{{category.name}}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Product</mat-label>\n          <mat-select formControlName=\"product\" (selectionChange)=\"getProductDetails($event.value)\">\n            <mat-option *ngFor=\"let product of products\" [value]=\"product\">{{product.name}}</mat-option>\n          </mat-select>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Price</mat-label>\n          <input matInput formControlName=\"price\" required>\n          <mat-error *ngIf=\"manageOrderForm.controls.price.touched && manageOrderForm.controls.price.invalid\">\n            <span *ngIf=\"manageOrderForm.controls.price.errors.required\">This field is mandatory. </span>\n            <span *ngIf=\"manageOrderForm.controls.price.errors.pattern\">This field is invalid. </span>\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Quantity</mat-label>\n          <input matInput formControlName=\"quantity\" required (keyup)=\"serQuantity($event)\" #input>\n          <mat-error *ngIf=\"manageOrderForm.controls.quantity.touched && manageOrderForm.controls.quantity.invalid\">\n            <span *ngIf=\"manageOrderForm.controls.quantity.errors.required\">This field is mandatory. </span>\n            <span *ngIf=\"manageOrderForm.controls.quantity.errors.pattern\">This field is invalid. </span>\n          </mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"fill\" fxFlex>\n          <mat-label>Total</mat-label>\n          <input matInput formControlName=\"total\" required readonly>\n          <mat-error *ngIf=\"manageOrderForm.controls.total.touched && manageOrderForm.controls.total.invalid\">\n            <span *ngIf=\"manageOrderForm.controls.total.errors.required\">This field is mandatory. </span>\n            <span *ngIf=\"manageOrderForm.controls.total.errors.pattern\">This field is invalid. </span>\n          </mat-error>\n        </mat-form-field>\n\n      </div>\n    </div>\n\n  </form>\n  <div>\n    <button mat-flat-button color=\"primary\" type=\"button\" [disabled]=\"validateProductAdd()\" (click)= \"add()\" > Add </button>\n\n  </div>\n</mat-card>\n<hr>\n<div color=\"primary\" type=\"button\" class=\"m-4\"> Total Amount: {{totalAmount}}</div>\n\n<div class=\"responsive_table\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"category\">\n      <th mat-header-cell *matHeaderCellDef>Category</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.category}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"price\">\n      <th mat-header-cell *matHeaderCellDef>Price</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.price}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"quantity\">\n      <th mat-header-cell *matHeaderCellDef>Quantity</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.quantity}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"total\">\n      <th mat-header-cell *matHeaderCellDef>Total</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.total}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"edit\">\n      <th mat-header-cell *matHeaderCellDef>Delete</th>\n      <td mat-cell *matCellDef=\"let element;let i= index\" class=\"action-link\">\n        <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"handleDeleteAction(i,element)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns:displayedColumns; sticky:true\"></tr>\n\n  </table>\n</div>\n<div>\n\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { ProductService } from 'src/app/services/product.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { GlobalConstants } from 'src/app/shared/global-constrants';\nimport { ProductComponent } from '../dialog/product/product.component';\nimport { ConfirmationComponent } from '../dialog/confirmation/confirmation.component';\n\n@Component({\n  selector: 'app-manage-product',\n  templateUrl: './manage-product.component.html',\n  styleUrls: ['./manage-product.component.scss']\n})\nexport class ManageProductComponent implements OnInit {\n  displayedColumns: string[] = ['name', 'categoryName', 'description', 'price', 'edit'];\n  dataSource: any;\n  responseMessage: any;\n\n\n  constructor(private productServices: ProductService,\n    private ngxServices: NgxUiLoaderService,\n    private dialog: MatDialog,\n    private snackbarServices: SnackbarService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.ngxServices.start()\n    this.tableData()\n  }\n  tableData() {\n    this.productServices.getProducts().subscribe((response: any) => {\n      this.ngxServices.stop();\n      this.dataSource = new MatTableDataSource(response);\n    }, (error: any) => {\n      this.ngxServices.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n\n      }\n      this.snackbarServices.openSnackbar(this.responseMessage, GlobalConstants.error);\n    })\n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n\n  handleAddAction() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      action: 'Add'\n    }\n    dialogConfig.width = \"850px\";\n    const dialogRef = this.dialog.open(ProductComponent, dialogConfig);\n    this.router.events.subscribe(() => {\n      dialogRef.close();\n\n    });\n    const sub = dialogRef.componentInstance.onAddProduct.subscribe((response) => {\n      this.tableData()\n    })\n  }\n\n  handleEditAction(values: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      action: 'Edit',\n      data: values\n    }\n    dialogConfig.width = \"850px\";\n    const dialogRef = this.dialog.open(ProductComponent, dialogConfig);\n    this.router.events.subscribe(() => {\n      dialogRef.close();\n\n    });\n    const sub = dialogRef.componentInstance.onEditProduct.subscribe((response) => {\n      this.tableData()\n    })\n  }\n\n\n  handleDeleteAction(values: any) {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      message: 'delete' + values.name + 'product'\n    }\n    const dialogRef = this.dialog.open(ConfirmationComponent, dialogConfig);\n    const sub = dialogRef.componentInstance.onEmitStatuschange.subscribe((response) => {\n      this.ngxServices.start();\n      this.deleteProduct(values.id)\n      dialogRef.close();\n    })\n  }\n\n  deleteProduct(id: any) {\n    this.productServices.delete(id).subscribe((response: any) => {\n      this.ngxServices.stop();\n      this.tableData();\n      this.responseMessage = response?.message;\n      this.snackbarServices.openSnackbar(this.responseMessage, \"success\");\n    }\n      , (error: any) => {\n        this.ngxServices.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n\n        }\n        this.snackbarServices.openSnackbar(this.responseMessage, GlobalConstants.error);\n      })\n\n\n  }\n  onChange(status: any, id: any) {\n    var data = {\n      status: status.toString(),\n      id: id\n    }\n    this.productServices.updateStatus(data).subscribe((response: any) => {\n      this.ngxServices.stop();\n      this.responseMessage = response?.message;\n      this.snackbarServices.openSnackbar(this.responseMessage, \"success\");\n\n    }, (error: any) => {\n      this.ngxServices.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n\n      }\n      this.snackbarServices.openSnackbar(this.responseMessage, GlobalConstants.error);\n    })\n  }\n\n}\n","<mat-card>\n  <b><span>Manage Product</span></b>\n  <button mat-flat-button color=\"primary\" class=\"float-right\" (click)=\"handleAddAction()\">Add Product</button>\n</mat-card>\n<hr>\n<mat-card>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" #input>\n  </mat-form-field>\n</mat-card>\n<hr>\n<div class=\"responsive_table\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"categoryName\">\n      <th mat-header-cell *matHeaderCellDef>Category Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.categoryName}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"description\">\n      <th mat-header-cell *matHeaderCellDef>Description</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.description}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"price\">\n      <th mat-header-cell *matHeaderCellDef>Price</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.price}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"edit\">\n      <th mat-header-cell *matHeaderCellDef>Action</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\n        <button mat-icon-button color=\"primary\" matTooltip=\"Edit\" (click)=\"handleEditAction(element)\">\n          <mat-icon>edit</mat-icon>\n        </button>\n        <button mat-icon-button color=\"primary\" matTooltip=\"Delete\" (click)=\"handleDeleteAction(element)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n        <mat-slide-toggle (change)=\"onChange($event.checked,element.id)\"\n          matTooltip=\"Activate or Deactivate Product\" [checked]=\"element.status\"></mat-slide-toggle>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns:displayedColumns; sticky:true\"></tr>\n\n  </table>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { GlobalConstants } from 'src/app/shared/global-constrants';\n\n@Component({\n  selector: 'app-manage-user',\n  templateUrl: './manage-user.component.html',\n  styleUrls: ['./manage-user.component.scss']\n})\nexport class ManageUserComponent implements OnInit {\n\n  displayedColumns: string[] = ['name', 'email', 'contactNumber', 'status'];\n  dataSource: any;\n  responseMessage: any;\n\n\n  constructor(private userServices: UserService,\n    private ngxServices: NgxUiLoaderService,\n    private dialog: MatDialog,\n    private snackbarServices: SnackbarService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.ngxServices.start()\n    this.tableData()\n  }\n  tableData() {\n    this.userServices.getUser().subscribe((response: any) => {\n      this.ngxServices.stop();\n      this.dataSource = new MatTableDataSource(response);\n    }, (error: any) => {\n      this.ngxServices.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n\n      }\n      this.snackbarServices.openSnackbar(this.responseMessage, GlobalConstants.error);\n    })\n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n handleChangeAction(status: any, id: any) {\n    var data = {\n      status: status.toString(),\n      id: id\n    }\n    this.userServices.update(data).subscribe((response: any) => {\n      this.ngxServices.stop();\n      this.responseMessage = response?.message;\n      this.snackbarServices.openSnackbar(this.responseMessage, \"success\");\n\n    }, (error: any) => {\n      this.ngxServices.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n\n      }\n      this.snackbarServices.openSnackbar(this.responseMessage, GlobalConstants.error);\n    })\n  }\n}\n","<mat-card>\n  <b><span>Manage User</span></b>\n</mat-card>\n<hr>\n<mat-card>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" #input>\n  </mat-form-field>\n</mat-card>\n<hr>\n<div class=\"responsive_table\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef>Email</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.email}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"contactNumber\">\n      <th mat-header-cell *matHeaderCellDef>Contact Number </th>\n      <td mat-cell *matCellDef=\"let element\">{{element.contactNumber}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"status\">\n      <th mat-header-cell *matHeaderCellDef>Action</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\n\n        <mat-slide-toggle (change)=\"handleChangeAction($event.checked,element.id)\"\n          matTooltip=\"Activate or Deactivate user\" [checked]=\"element.status\"></mat-slide-toggle>\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns:displayedColumns; sticky:true\"></tr>\n\n  </table>\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\nimport { CdkTableModule } from '@angular/cdk/table';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\n\nimport { MaterialRoutes } from './material.routing';\nimport { MaterialModule } from '../shared/material-module';\nimport { ViewBillProductsComponent } from './dialog/view-bill-products/view-bill-products.component';\nimport { ConfirmationComponent } from './dialog/confirmation/confirmation.component';\nimport { ChangePasswordComponent } from './dialog/change-password/change-password.component';\nimport { ManageCategoryComponent } from './manage-category/manage-category.component';\nimport { CategoryComponent } from './dialog/category/category.component';\nimport { ManageProductComponent } from './manage-product/manage-product.component';\nimport { ProductComponent } from './dialog/product/product.component';\nimport { ManageOrderComponent } from './manage-order/manage-order.component';\nimport { ViewBillComponent } from './view-bill/view-bill.component';\nimport { ManageUserComponent } from './manage-user/manage-user.component';\nimport { ViewCategoryComponent } from './view-category/view-category.component';\nimport { ViewProductComponent } from './view-product/view-product.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(MaterialRoutes),\n    MaterialModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FlexLayoutModule,\n    CdkTableModule\n  ],\n  providers: [],\n  declarations: [\n    ViewBillProductsComponent,\n    ConfirmationComponent,\n    ChangePasswordComponent,\n    ManageCategoryComponent,\n    CategoryComponent,\n    ManageProductComponent,\n    ProductComponent,\n    ManageOrderComponent,\n    ViewBillComponent,\n    ManageUserComponent,\n    ViewCategoryComponent,\n    ViewProductComponent    \n  ]\n})\nexport class MaterialComponentsModule {}\n","import { Routes } from '@angular/router';\nimport { DashboardComponent } from '../dashboard/dashboard.component';\nimport { ManageCategoryComponent } from './manage-category/manage-category.component';\nimport { RouteGuardService } from '../services/route-guard.service';\nimport { ManageProductComponent } from './manage-product/manage-product.component';\nimport { ManageOrderComponent } from './manage-order/manage-order.component';\nimport { ViewBillProductsComponent } from './dialog/view-bill-products/view-bill-products.component';\nimport { ViewBillComponent } from './view-bill/view-bill.component';\nimport { ManageUserComponent } from './manage-user/manage-user.component';\nimport { ViewCategoryComponent } from './view-category/view-category.component';\nimport { ViewProductComponent } from './view-product/view-product.component';\n\n\n\nexport const MaterialRoutes: Routes = [\n  {\n    path: 'Category',\n    component:ManageCategoryComponent,\n    canActivate :[RouteGuardService],\n    data :{\n      expectedRole:['admin']\n    }\n  },\n  {\n    path: 'Product',\n    component:ManageProductComponent,\n    canActivate :[RouteGuardService],\n    data :{\n      expectedRole:['admin']\n    }\n  },\n  {\n    path: 'order',\n    component:ManageOrderComponent,\n    canActivate :[RouteGuardService],\n    data :{\n      expectedRole:['admin','user']\n    }\n  },\n  {\n    path: 'bill',\n    component:ViewBillComponent,\n    canActivate :[RouteGuardService],\n    data :{\n      expectedRole:['admin','user']\n    }\n  },\n  {\n    path: 'view-category',\n    component:ViewCategoryComponent,\n    canActivate :[RouteGuardService],\n    data :{\n      expectedRole:['admin','user']\n    }\n  },\n  {\n    path: 'view-product',\n    component: ViewProductComponent,\n    canActivate :[RouteGuardService],\n    data :{\n      expectedRole:['admin','user']\n    }\n  },\n  {\n    path: 'user',\n    component:ManageUserComponent,\n    canActivate :[RouteGuardService],\n    data :{\n      expectedRole:['admin']\n    }\n  }\n];\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { BillService } from 'src/app/services/bill.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { GlobalConstants } from 'src/app/shared/global-constrants';\nimport { ViewBillProductsComponent } from '../dialog/view-bill-products/view-bill-products.component';\nimport { ConfirmationComponent } from '../dialog/confirmation/confirmation.component';\nimport { saveAs } from 'file-saver';\n\n@Component({\n  selector: 'app-view-bill',\n  templateUrl: './view-bill.component.html',\n  styleUrls: ['./view-bill.component.scss']\n})\nexport class ViewBillComponent implements OnInit {\n  displayedColumns: string[] = ['name', 'email', 'contactNumber', 'paymentMethod', 'total', 'view' ];\n  dataSource: any;\n  responseMessage: any;\n\n\n  constructor(private billServices: BillService,\n    private ngxServices: NgxUiLoaderService,\n    private dialog: MatDialog,\n    private snackbarServices: SnackbarService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.ngxServices.start()\n    this.tableData()\n  }\n  tableData() {\n    this.billServices.getBills().subscribe((response: any) => {\n      this.ngxServices.stop();\n      this.dataSource = new MatTableDataSource(response);\n    }, (error: any) => {\n      this.ngxServices.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n\n      }\n      this.snackbarServices.openSnackbar(this.responseMessage, GlobalConstants.error);\n    })\n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  handleViewAction(values:any){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      data: values\n    }\n    dialogConfig.width = \"850px\";\n    const dialogRef = this.dialog.open(ViewBillProductsComponent, dialogConfig);\n    this.router.events.subscribe(() => {\n      dialogRef.close();\n\n    });\n  }\n  downloadReportAction(values:any){\n    this.ngxServices.start();\n    var data ={\n      name:values.name,\n      email:values.email,\n      uuid:values.uuid,\n      contactNumber:values.contactNumber,\n      paymentMethod:values.paymentMethod,\n      totalAmount:values.totalAmount,\n      productDetails:values.productDetails\n    }\n    this.billServices.getPdf(data).subscribe((response)=>{\n      saveAs(response,values.uuid+'.pdf');\n      this.ngxServices.stop();\n    })\n  }\n  handleDeleteAction(values:any){\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.data = {\n      message: 'delete' + values.name + 'bill'\n    }\n    const dialogRef = this.dialog.open(ConfirmationComponent, dialogConfig);\n    const sub = dialogRef.componentInstance.onEmitStatuschange.subscribe((response) => {\n      this.ngxServices.start();\n      this.deleteProduct(values.id)\n      dialogRef.close();\n    })\n  }\n  deleteProduct(id:any){\n    this.billServices.delete(id).subscribe((response: any) => {\n      this.ngxServices.stop();\n      this.tableData();\n      this.responseMessage = response?.message;\n      this.snackbarServices.openSnackbar(this.responseMessage, \"success\");\n    }\n      , (error: any) => {\n        this.ngxServices.stop();\n        if (error.error?.message) {\n          this.responseMessage = error.error?.message;\n\n        } else {\n          this.responseMessage = GlobalConstants.genericError;\n\n        }\n        this.snackbarServices.openSnackbar(this.responseMessage, GlobalConstants.error);\n      })\n\n  }\n}\n","<mat-card>\n  <b><span>view Bill</span></b>\n</mat-card>\n<hr>\n<mat-card>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" #input>\n  </mat-form-field>\n</mat-card>\n<hr>\n<div class=\"responsive_table\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef>Email</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.email}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"contactNumber\">\n      <th mat-header-cell *matHeaderCellDef>Contact Number</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.contactNumber}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"paymentMethod\">\n      <th mat-header-cell *matHeaderCellDef>Payment Method</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.paymentMethod}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"total\">\n      <th mat-header-cell *matHeaderCellDef>Total</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.total}}</td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"view\">\n      <th mat-header-cell *matHeaderCellDef>Action</th>\n      <td mat-cell *matCellDef=\"let element\" class=\"action-link\">\n        <button mat-icon-button color=\"primary\" matTooltip=\"View\" (click)=\"handleViewAction(element)\">\n          <mat-icon>visibility</mat-icon>\n        </button>\n        <button mat-icon-button color=\"primary\" matTooltip=\"download\" (click)=\"downloadReportAction(element)\">\n          <mat-icon>summarize</mat-icon>\n        </button>\n        <button mat-icon-button color=\"primary\" matTooltip=\"delete\" (click)=\"handleDeleteAction(element)\">\n          <mat-icon>delete</mat-icon>\n        </button>\n\n      </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns:displayedColumns; sticky:true\"></tr>\n\n  </table>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { GlobalConstants } from 'src/app/shared/global-constrants';\n\n@Component({\n  selector: 'app-view-category',\n  templateUrl: './view-category.component.html',\n  styleUrls: ['./view-category.component.scss']\n})\nexport class ViewCategoryComponent implements OnInit {\n  displayedColumns: string[] = ['name'];\n  dataSource: any;\n  responseMessage: any;\n\n\n  constructor(private categoryServices: CategoryService,\n    private ngxServices: NgxUiLoaderService,\n    private dialog: MatDialog,\n    private snackbarServices: SnackbarService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.ngxServices.start()\n    this.tableData()\n  }\n  tableData() {\n    this.categoryServices.getCategory().subscribe((response: any) => {\n      this.ngxServices.stop();\n      this.dataSource = new MatTableDataSource(response);\n    }, (error: any) => {\n      this.ngxServices.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n\n      }\n      this.snackbarServices.openSnackbar(this.responseMessage, GlobalConstants.error);\n    })\n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","<mat-card>\n  <b><span>View Category </span></b>\n</mat-card>\n<hr>\n<mat-card>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" #input>\n  </mat-form-field>\n</mat-card>\n<hr>\n<div class=\"responsive_table\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns:displayedColumns; sticky:true\"></tr>\n\n  </table>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { CategoryService } from 'src/app/services/category.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { GlobalConstants } from 'src/app/shared/global-constrants';\n\n@Component({\n  selector: 'app-view-product',\n  templateUrl: './view-product.component.html',\n  styleUrls: ['./view-product.component.scss']\n})\nexport class ViewProductComponent implements OnInit {\n  displayedColumns: string[] = ['name', 'categoryName', 'description', 'price'];\n  dataSource: any;\n  responseMessage: any;\n\n\n  constructor(private productServices: ProductService,\n    private ngxServices: NgxUiLoaderService,\n    private dialog: MatDialog,\n    private snackbarServices: SnackbarService,\n    private router: Router\n  ) { }\n\n  ngOnInit(): void {\n    this.ngxServices.start()\n    this.tableData()\n  }\n  tableData() {\n    this.productServices.getProducts().subscribe((response: any) => {\n      this.ngxServices.stop();\n      this.dataSource = new MatTableDataSource(response);\n    }, (error: any) => {\n      this.ngxServices.stop();\n      if (error.error?.message) {\n        this.responseMessage = error.error?.message;\n\n      } else {\n        this.responseMessage = GlobalConstants.genericError;\n\n      }\n      this.snackbarServices.openSnackbar(this.responseMessage, GlobalConstants.error);\n    })\n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","<mat-card>\n  <b><span>View Product </span></b>\n</mat-card>\n<hr>\n<mat-card>\n  <mat-form-field appearance=\"fill\">\n    <mat-label>Filter</mat-label>\n    <input matInput (keyup)=\"applyFilter($event)\" #input>\n  </mat-form-field>\n</mat-card>\n<hr>\n<div class=\"responsive_table\">\n  <table mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\n\n    <ng-container matColumnDef=\"name\">\n      <th mat-header-cell *matHeaderCellDef>Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.name}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"categoryName\">\n      <th mat-header-cell *matHeaderCellDef>Category Name</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.categoryName}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"description\">\n      <th mat-header-cell *matHeaderCellDef>Description</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.description}}</td>\n    </ng-container>\n    <ng-container matColumnDef=\"price\">\n      <th mat-header-cell *matHeaderCellDef>Price</th>\n      <td mat-cell *matCellDef=\"let element\">{{element.price}}</td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns:displayedColumns; sticky:true\"></tr>\n\n  </table>\n\n</div>\n","import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\nimport { environment } from '../../environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class BillService {\n  private url: string = environment.apiUrl;\n\n  private headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n  constructor(private httpClient: HttpClient) { }\n\n  generateReport(data: any): Observable<any> {\n    return this.httpClient.post(`${this.url}/bill/generateReport`, data)\n      .pipe(\n        catchError(this.handleError)\n      );\n  }\n\n  getPdf(data: any): Observable<Blob> {\n    return this.httpClient.post(`${this.url}/bill/getPdf`, data, {\n      responseType: 'blob'\n    });\n  }\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'An unknown error occurred!';\n    if (error.error instanceof ErrorEvent) {\n      // Client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Server-side error\n      errorMessage = error.error?.message || 'Server error';\n    }\n    console.error('Error:', error);\n    return throwError(() => errorMessage);\n  }\n\n  getBills(): Observable<any> {\n    return this.httpClient.get(`${this.url}/bill/getBills`).pipe(\n      map((response: any) => {\n        // Transform the response if needed\n        if (Array.isArray(response)) {\n          return response.map(bill => ({\n            ...bill,\n            productDetails: this.parseProductDetails(bill.productDetails)\n          }));\n        }\n        return response;\n      })\n    );\n  }\n\n  private parseProductDetails(details: any): any[] {\n    try {\n      if (typeof details === 'string') {\n        return JSON.parse(details);\n      }\n      return Array.isArray(details) ? details : [];\n    } catch (error) {\n      console.error('Error parsing product details:', error);\n      return [];\n    }\n  }\n  delete(id: any) {\n    return this.httpClient.delete(this.url + \"/bill/delete/\" + id, {\n     headers: this.headers\n    })\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n  private url: string = environment.apiUrl;\n\n  constructor(private httpClient: HttpClient) { }\n\n  add(data: any) {\n    return this.httpClient.post(this.url +\n      \"/category/add/\", data, {\n      headers: new HttpHeaders().set('Content-Type', 'application/json')\n    });\n  }\n\n  update(data: any) {\n    return this.httpClient.patch(this.url +\n      \"/category/update/\", data, {\n      headers: new HttpHeaders().set('Content-Type', 'application/json')\n    })\n  }\n  getCategory() {\n    return this.httpClient.get(this.url + \"/category/get\");\n  }\n  delete(id: any) {\n    return this.httpClient.delete(this.url +\n      \"/category/delete/\" + id, {\n      headers: new HttpHeaders().set('Content-Type', 'application/json')\n    })\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n  private url: string = environment.apiUrl;\n\n  constructor(private httpClient: HttpClient) { }\n\n  add(data: any) {\n    return this.httpClient.post(this.url +\n      \"/product/add/\", data, {\n      headers: new HttpHeaders().set('Content-Type', 'application/json')\n    })\n  }\n  getByName(name: string) {\n    return this.httpClient.get(this.url + \"/product/getByName/\" + name, {\n      headers: new HttpHeaders().set('Content-Type', 'application/json')\n    });\n  }\n  update(data: any) {\n    return this.httpClient.patch(this.url +\n      \"/product/update/\", data, {\n      headers: new HttpHeaders().set('Content-Type', 'application/json')\n    })\n  }\n  getProducts() {\n    return this.httpClient.get(this.url + \"/product/get\");\n  }\n\n  updateStatus(data: any) {\n    return this.httpClient.patch(this.url +\n      \"/product/updateStatus/\", data, {\n      headers: new HttpHeaders().set('Content-Type', 'application/json')\n    })\n  }\n  delete(id: any) {\n    return this.httpClient.delete(this.url +\n      \"/product/delete/\" + id, {\n      headers: new HttpHeaders().set('Content-Type', 'application/json')\n    })\n  }\n  getProductByCategory(categoryId: number) {\n    return this.httpClient.get(`${this.url}/product/getByCategory/${categoryId}`);\n  }\n\n  getById(id: number): Observable<any> {\n    if (!id) {\n      throw new Error('Product ID is required');\n    }\n\n    return this.httpClient.get<any>(`${this.url}/product/getById/${id}`).pipe(\n      catchError(error => {\n        console.error('Product service error:', error);\n        throw error;\n      })\n    );\n  }\n\n}\n","(function(a,b){if(\"function\"==typeof define&&define.amd)define([],b);else if(\"undefined\"!=typeof exports)b();else{b(),a.FileSaver={exports:{}}.exports}})(this,function(){\"use strict\";function b(a,b){return\"undefined\"==typeof b?b={autoBom:!1}:\"object\"!=typeof b&&(console.warn(\"Deprecated: Expected third argument to be a object\"),b={autoBom:!b}),b.autoBom&&/^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type)?new Blob([\"\\uFEFF\",a],{type:a.type}):a}function c(a,b,c){var d=new XMLHttpRequest;d.open(\"GET\",a),d.responseType=\"blob\",d.onload=function(){g(d.response,b,c)},d.onerror=function(){console.error(\"could not download file\")},d.send()}function d(a){var b=new XMLHttpRequest;b.open(\"HEAD\",a,!1);try{b.send()}catch(a){}return 200<=b.status&&299>=b.status}function e(a){try{a.dispatchEvent(new MouseEvent(\"click\"))}catch(c){var b=document.createEvent(\"MouseEvents\");b.initMouseEvent(\"click\",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),a.dispatchEvent(b)}}var f=\"object\"==typeof window&&window.window===window?window:\"object\"==typeof self&&self.self===self?self:\"object\"==typeof global&&global.global===global?global:void 0,a=f.navigator&&/Macintosh/.test(navigator.userAgent)&&/AppleWebKit/.test(navigator.userAgent)&&!/Safari/.test(navigator.userAgent),g=f.saveAs||(\"object\"!=typeof window||window!==f?function(){}:\"download\"in HTMLAnchorElement.prototype&&!a?function(b,g,h){var i=f.URL||f.webkitURL,j=document.createElement(\"a\");g=g||b.name||\"download\",j.download=g,j.rel=\"noopener\",\"string\"==typeof b?(j.href=b,j.origin===location.origin?e(j):d(j.href)?c(b,g,h):e(j,j.target=\"_blank\")):(j.href=i.createObjectURL(b),setTimeout(function(){i.revokeObjectURL(j.href)},4E4),setTimeout(function(){e(j)},0))}:\"msSaveOrOpenBlob\"in navigator?function(f,g,h){if(g=g||f.name||\"download\",\"string\"!=typeof f)navigator.msSaveOrOpenBlob(b(f,h),g);else if(d(f))c(f,g,h);else{var i=document.createElement(\"a\");i.href=f,i.target=\"_blank\",setTimeout(function(){e(i)})}}:function(b,d,e,g){if(g=g||open(\"\",\"_blank\"),g&&(g.document.title=g.document.body.innerText=\"downloading...\"),\"string\"==typeof b)return c(b,d,e);var h=\"application/octet-stream\"===b.type,i=/constructor/i.test(f.HTMLElement)||f.safari,j=/CriOS\\/[\\d]+/.test(navigator.userAgent);if((j||h&&i||a)&&\"undefined\"!=typeof FileReader){var k=new FileReader;k.onloadend=function(){var a=k.result;a=j?a:a.replace(/^data:[^;]*;/,\"data:attachment/file;\"),g?g.location.href=a:location=a,g=null},k.readAsDataURL(b)}else{var l=f.URL||f.webkitURL,m=l.createObjectURL(b);g?g.location=m:location.href=m,g=null,setTimeout(function(){l.revokeObjectURL(m)},4E4)}});f.saveAs=g.saveAs=g,\"undefined\"!=typeof module&&(module.exports=g)});\n\n"],"names":[],"sourceRoot":"webpack:///"}