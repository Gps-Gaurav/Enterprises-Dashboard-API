{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/carousel/carousel.component.ts","./src/app/carousel/carousel.component.html","./src/app/footer/footer.component.ts","./src/app/footer/footer.component.html","./src/app/forgot-password/forgot-password.component.ts","./src/app/forgot-password/forgot-password.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/layouts/full/full.component.ts","./src/app/layouts/full/full.component.html","./src/app/layouts/full/header/header.component.ts","./src/app/layouts/full/header/header.component.html","./src/app/layouts/full/sidebar/sidebar.component.ts","./src/app/layouts/full/sidebar/sidebar.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/material-component/dialog/change-password/change-password.component.ts","./src/app/material-component/dialog/change-password/change-password.component.html","./src/app/material-component/dialog/confirmation/confirmation.component.ts","./src/app/material-component/dialog/confirmation/confirmation.component.html","./src/app/our-services/our-services.component.ts","./src/app/our-services/our-services.component.html","./src/app/services/auth.service.ts","./src/app/services/route-guard.service.ts","./src/app/services/snackbar.service.ts","./src/app/services/token-interceptor.interceptor.ts","./src/app/services/user.service.ts","./src/app/shared/accordion/accordion.directive.ts","./src/app/shared/accordion/accordionanchor.directive.ts","./src/app/shared/accordion/accordionlink.directive.ts","./src/app/shared/accordion/index.ts","./src/app/shared/global-constrants.ts","./src/app/shared/material-module.ts","./src/app/shared/menu-items.ts","./src/app/shared/shared.module.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { FullComponent } from './layouts/full/full.component';\nimport { RouteGuardService } from './services/route-guard.service';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  {\n    path: 'cafe',\n    component: FullComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: '/cafe/dashboard',\n        pathMatch: 'full',\n      },\n      {\n        path: '',\n        loadChildren:\n          () => import('./material-component/material.module').then(m => m.MaterialComponentsModule),\n          canActivate :[RouteGuardService],\n          data:{\n            expectedRole :['admin','user']\n          }\n        },\n      {\n        path: 'dashboard',\n        loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule),\n        canActivate :[RouteGuardService],\n        data:{\n          expectedRole :['admin','user']\n        }\n      }\n    ]\n  },\n  { path: '**', component: HomeComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'Frontend';\n}\n","<router-outlet></router-outlet>\n<ngx-ui-loader></ngx-ui-loader>\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { MaterialModule } from './shared/material-module';\nimport { HomeComponent } from './home/home.component';\nimport { OurServicesComponent } from './our-services/our-services.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { SharedModule } from './shared/shared.module';\nimport { FullComponent } from './layouts/full/full.component';\nimport { AppHeaderComponent } from './layouts/full/header/header.component';\nimport { AppSidebarComponent } from './layouts/full/sidebar/sidebar.component';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { SignupComponent } from './signup/signup.component';\nimport {\n  NgxUiLoaderModule,\n  NgxUiLoaderConfig,\n  SPINNER,\n  PB_DIRECTION,\n} from 'ngx-ui-loader';\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\nimport { LoginComponent } from './login/login.component';\nimport { TokenInterceptorInterceptor } from './services/token-interceptor.interceptor';\nimport { CarouselComponent } from './carousel/carousel.component';\nimport { CarouselModule } from 'ngx-owl-carousel-o';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FooterComponent } from './footer/footer.component';\n\nconst ngxUiLoaderConfig: NgxUiLoaderConfig = {\n  text: 'Loading...',\n  textColor: '#ffffff',\n  textPosition: 'center-center',\n  pbColor: 'red',\n  bgsColor: 'red',\n  fgsColor: 'red',\n  fgsType: SPINNER.ballSpinClockwise,\n  fgsSize: 100,\n  pbDirection: PB_DIRECTION.leftToRight,\n  pbThickness: 5,\n};\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    OurServicesComponent,\n    FullComponent,\n    AppHeaderComponent,\n    AppSidebarComponent,\n    SignupComponent,\n    CarouselComponent,\n    ForgotPasswordComponent,\n    LoginComponent,\n    CarouselComponent,\n    FooterComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MaterialModule,\n    FlexLayoutModule,\n    SharedModule,\n    HttpClientModule,\n    CarouselModule,\n    BrowserAnimationsModule,\n    NgxUiLoaderModule.forRoot(ngxUiLoaderConfig),\n  ],\n  providers: [\n    HttpClientModule,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: TokenInterceptorInterceptor,\n      multi: true,\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { OwlOptions } from 'ngx-owl-carousel-o';\n\n@Component({\n  selector: 'app-carousel',\n  templateUrl: './carousel.component.html',\n  styleUrls: ['./carousel.component.scss']\n})\nexport class CarouselComponent implements OnInit {\n  customOptions: OwlOptions = {\n    loop: true,\n    mouseDrag: true,\n    touchDrag: true,\n    pullDrag: false,\n    autoplay: true,\n    autoplayTimeout: 5000,\n    autoplayHoverPause: true,\n    dots: true,\n    navSpeed: 700,\n    navText: ['<i class=\"fas fa-chevron-left\"></i>', '<i class=\"fas fa-chevron-right\"></i>'],\n    responsive: {\n      0: {\n        items: 1\n      }\n    },\n    nav: true\n  };\n\n  carouselImages = [\n    {\n      url: 'https://picsum.photos/1920/600?random=1',\n      title: 'Welcome to Our Enterprises Dashboard',\n      description: 'Manage and monitor your data efficiently'\n    },\n    {\n      url: 'https://picsum.photos/1920/600?random=2',\n      title: 'Real-time Analytics',\n      description: 'Track your performance metrics instantly'\n    },\n    {\n      url: 'https://picsum.photos/1920/600?random=3',\n      title: 'Comprehensive Reports',\n      description: 'Get detailed insights into your business'\n    },\n    {\n      url: 'https://picsum.photos/1920/600?random=4',\n      title: 'Generated Bills and Invoices',\n      description: 'Get detailed insights into your business'\n    }\n  ];\n\n  constructor() { }\n\n  ngOnInit(): void { }\n}\n","<!-- carousel.component.html -->\n<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css\">\n<div class=\"carousel-container\">\n  <owl-carousel-o [options]=\"customOptions\">\n    <ng-container *ngFor=\"let slide of carouselImages\">\n      <ng-template carouselSlide>\n        <div class=\"slide-container\">\n          <div class=\"slide-image\" [style.background-image]=\"'url(' + slide.url + ')'\">\n            <div class=\"overlay\"></div>\n            <div class=\"slide-content\">\n              <h2 class=\"slide-title\">{{slide.title}}</h2>\n              <p class=\"slide-description\">{{slide.description}}</p>\n            </div>\n          </div>\n        </div>\n      </ng-template>\n    </ng-container>\n  </owl-carousel-o>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Bootstrap 5 -->\n<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n<!-- Font Awesome -->\n<link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.css\" rel=\"stylesheet\">\n\n<!-- footer.component.html -->\n<footer class=\"footer-section py-4 mt-5\">\n  <div class=\"container\">\n    <div class=\"row g-4 align-items-center\">\n      <!-- Company Info -->\n      <div class=\"col-lg-4 text-center text-lg-start\">\n        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcTbQcxyQLYSYacrnMY9QrAH2sICfiKqnUYYvg&s\" alt=\"Company Logo\" class=\"footer-logo mb-3\">\n        <p class=\"text-muted mb-0\">\n          Enterprises Management System\n          <br>\n          Making business simpler\n        </p>\n      </div>\n\n      <!-- Quick Links -->\n      <div class=\"col-lg-4 text-center\">\n        <div class=\"social-links\">\n          <a href=\"#\" class=\"social-icon\">\n            <i class=\"fab fa-facebook-f\"></i>\n          </a>\n          <a href=\"#\" class=\"social-icon\">\n            <i class=\"fab fa-twitter\"></i>\n          </a>\n          <a href=\"#\" class=\"social-icon\">\n            <i class=\"fab fa-linkedin-in\"></i>\n          </a>\n          <a href=\"#\" class=\"social-icon\">\n            <i class=\"fab fa-instagram\"></i>\n          </a>\n        </div>\n      </div>\n\n      <!-- Contact Info -->\n      <div class=\"col-lg-4 text-center text-lg-end\">\n        <div class=\"contact-info\">\n          <p class=\"mb-1\">\n            <i class=\"fas fa-envelope me-2\"></i>\n            contact@example.com\n          </p>\n          <p class=\"mb-1\">\n            <i class=\"fas fa-phone me-2\"></i>\n            +1 (555) 123-4567\n          </p>\n          <p class=\"mb-0 text-muted small\">\n            Last updated: 2024-12-23 15:04:35 UTC\n            <br>\n            By: Gps-Gaurav\n          </p>\n        </div>\n      </div>\n    </div>\n\n    <!-- Copyright -->\n    <div class=\"row mt-4\">\n      <div class=\"col-12\">\n        <hr class=\"footer-divider\">\n        <p class=\"text-center text-muted small mb-0\">\n          © 2024 Enterprises Management System. All rights reserved.\n        </p>\n      </div>\n    </div>\n  </div>\n</footer>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from '../services/user.service';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { SnackbarService } from '../services/snackbar.service';\nimport { GlobalConstants } from '../shared/global-constrants';\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss']\n})\nexport class ForgotPasswordComponent implements OnInit {\n  forgotPasswordForm: any = FormGroup;\n  responseMessage: any;\n\n  constructor(private formBuilder: FormBuilder, private router: Router,\n    private userServices: UserService, private snackbarservices: SnackbarService,\n    private dialogRef: MatDialogRef<ForgotPasswordComponent>,\n    private ngxService: NgxUiLoaderService) { }\n\n  ngOnInit(): void {\n    this.forgotPasswordForm = this.formBuilder.group({\n      email: [null, [Validators.required, Validators.pattern(GlobalConstants.emailRegex)]]\n    });\n\n  }\n\n  handleSubmit() {\n    this.ngxService.start();\n    var formData = this.forgotPasswordForm.value;\n    var data = {\n      email: formData.email\n    }\n    this.userServices.forgotPassword(data).subscribe((response:any)=>{\n      this.ngxService.stop();\n      this.dialogRef.close();\n      this.responseMessage = response?.message;\n      this.snackbarservices.openSnackbar(this.responseMessage,\"\");\n      this.router.navigate(['/']);\n\n    },(error)=>{\n      this.ngxService.stop();\n      if(error.error?.message){\n        this.responseMessage = error.error?.message;\n\n      }else{\n        this.responseMessage = GlobalConstants.genericError;\n\n      }\n      this.responseMessage.openSnackbar(this.responseMessage,GlobalConstants.error);\n    })\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row fxlayout=\"row\">\n    <span class=\"tille-center\">Forgot Password?</span>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-dialog-content class=\"mat-typography\">\n  <form [formGroup]=\"forgotPasswordForm\">\n    <div fxFlex fxLayout=\"column\">\n\n      <mat-form-field appearance=\"fill\" fxFlex>\n        <mat-label>email</mat-label>\n        <input matInput formControlName=\"email\" required>\n        <mat-error *ngIf=\"forgotPasswordForm.controls.email.touched && forgotPasswordForm.controls.email.invalid\">\n          <span *ngIf=\"forgotPasswordForm.controls.email.errors.required\">This field is mandatory. </span>\n          <span *ngIf=\"forgotPasswordForm.controls.email.errors.pattern\">This field is invalid. </span>\n        </mat-error>\n      </mat-form-field>\n    </div>\n\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"center\">\n\n  <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"handleSubmit() \"\n    [disabled]=\"!(forgotPasswordForm.valid && forgotPasswordForm.dirty)\">Forgot Password </button>\n  <button mat-raised-button colour=\"primary\" mat-dialog-close>Close</button>\n\n</mat-dialog-actions>\n","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { SignupComponent } from '../signup/signup.component';\nimport { ForgotPasswordComponent } from '../forgot-password/forgot-password.component';\nimport { LoginComponent } from '../login/login.component';\nimport { Route, Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private dialog: MatDialog,\n    private router :Router,private userServices:UserService) { }\n\n  ngOnInit(): void {\n    if(localStorage.getItem('token') != null){\n  this.userServices.checkToken().subscribe((response:any)=>{\n    this.router.navigate(['/cafe/dashboard'])\n  },(error:any)=>{\n    console.log(error);\n  })\n    }\n  }\n  signupAction() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = \"500px\";\n    this.dialog.open(SignupComponent, dialogConfig);\n  }\n\n  ForgotPasswordAction() {\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = \"500px\";\n    this.dialog.open(ForgotPasswordComponent, dialogConfig);\n\n  }\n  loginAction() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = \"500px\";\n    this.dialog.open(LoginComponent, dialogConfig);\n  }\n}\n","<app-carousel></app-carousel>\n<app-our-services></app-our-services>\n\n<div class=\"wrapper sticky\" style=\"background-color: rgb(9, 117, 185);\">\n  <nav class=\"navbar-fixed-top\">\n    <a href=\"#\" class=\"logo\">\n      <mat-icon>storefront</mat-icon> Enterprises Dashboard\n    </a>\n    <ul style=\"color: aliceblue;\">\n      <li><a (click) = \"loginAction()\"> Login</a></li>\n      <li><a (click) = \"signupAction()\"> Register</a></li>\n    </ul>\n  </nav>\n</div>\n<app-footer></app-footer>\n\n\n\n","import { MediaMatcher } from '@angular/cdk/layout';\nimport { ChangeDetectorRef, Component, OnDestroy, AfterViewInit } from '@angular/core';\n\n\n/** @title Responsive sidenav */\n@Component({\n  selector: 'app-full-layout',\n  templateUrl: 'full.component.html',\n  styleUrls: []\n})\nexport class FullComponent implements OnDestroy, AfterViewInit {\n  mobileQuery: MediaQueryList;\n\n  private _mobileQueryListener: () => void;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher\n  ) {\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n  ngAfterViewInit() { }\n}\n","<div class=\"main-container\">\n    <mat-toolbar color=\"primary\" class=\"topbar telative\">\n        <div class=\"navbar-header\">\n            <button mat-icon-button (click)=\"snav.toggle()\" value=\"sidebarclosed\" style=\"vertical-align: bottom;\">\n                <mat-icon>menu</mat-icon>\n            </button><b>\n                <span style=\"vertical-align: middle;\">\n                    <mat-icon>storefront</mat-icon>\n                </span>\n            </b>\n            <span fxShow=\"false\" fxShow.gt-xs>\n              Enterprises Dashboard\n            </span>\n        </div>\n        <span fxFlex></span>\n        <app-header></app-header>\n    </mat-toolbar>\n    <mat-sidenav-container class=\"example-sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 0 : 0\">\n        <mat-sidenav #snav id=\"snav\" class=\"dark-sidebar pl-xs\" [mode]=\"mobileQuery.matches ? 'side' : 'over'\"\n            fixedTopGap=\"0\" [opened]=\"mobileQuery.matches\" [disableClose]=\"mobileQuery.matches\">\n            <app-sidebar></app-sidebar>\n        </mat-sidenav>\n        <mat-sidenav-content class=\"page-wrapper\">\n            <div class=\"page-content\">\n                <router-outlet></router-outlet>\n            </div>\n        </mat-sidenav-content>\n    </mat-sidenav-container>\n</div>\n","import { Component } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { ConfirmationComponent } from 'src/app/material-component/dialog/confirmation/confirmation.component';\nimport { ChangePasswordComponent } from 'src/app/material-component/dialog/change-password/change-password.component';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: []\n})\nexport class AppHeaderComponent {\n  role: any;\n\n  constructor(private router: Router,\n    userServices:UserService,\n    private dialog: MatDialog) {\n\n  }\n  logout() {\n    const DialogConfig = new MatDialogConfig;\n    DialogConfig.data = {\n      message: 'logout'\n    };\n    const dialogRef = this.dialog.open(ConfirmationComponent, DialogConfig);\n    const sub = dialogRef.componentInstance.onEmitStatuschange.subscribe((user) => {\n      dialogRef.close();\n      localStorage.clear();\n      this.router.navigate(['/']);\n    })\n\n  }\n\n  changePassword() {\n    const DialogConfig = new MatDialogConfig();\n    DialogConfig.width = \"550px\";\n    this.dialog.open(ChangePasswordComponent, DialogConfig);\n  }\n\n}\n","<div class=\"row\">\n  <div class=\"col\">\n    <h4></h4>\n    <button [matMenuTriggerFor]=\"profile\" mat-icon-button class=\"m-r-5\">\n      <mat-icon>account_circle</mat-icon>\n    </button>\n  </div>\n</div>\n<mat-menu #profile=\"matMenu\" class=\"mymegamenu\">\n  <button mat-menu-item (click)=\"changePassword()\">\n    <mat-icon>Password</mat-icon> Change Password\n\n  </button>\n\n  <button mat-menu-item (click)=\"logout()\">\n    <mat-icon>exit_to_app</mat-icon> Sign Out\n  </button>\n</mat-menu>\n","import { ChangeDetectorRef, Component, OnDestroy } from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { jwtDecode } from 'jwt-decode';\nimport { MenuItems } from 'src/app/shared/menu-items';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: []\n})\nexport class AppSidebarComponent implements OnDestroy {\n  mobileQuery: MediaQueryList;\n  token :any = localStorage.getItem('token');\n  tokenPayload: any;\n\n  private _mobileQueryListener: () => void;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher, public menuItem : MenuItems\n  ) {\n    this.tokenPayload = jwtDecode(this.token);\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n}\n","<mat-nav-list appAccordion >\n  <mat-list-item appAccordionLink *ngFor=\"let menuitem of menuItem.getMenuitems()\" routerLinkActive=\"selected\" group=\"{{menuitem.state}}\">\n<a appAccordionToggle [routerLink]=\"['/cafe', menuitem.state ]\" *ngIf=\"(menuitem.role ===''|| menuitem.role=== tokenPayload.role)\" >\n<mat-icon>{{menuitem.icon}}</mat-icon>\n<span>{{menuitem.name}}</span>\n<span fxFlex></span>\n</a>\n\n  </mat-list-item>\n</mat-nav-list>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { SnackbarService } from '../services/snackbar.service';\nimport { UserService } from '../services/user.service';\nimport { GlobalConstants } from '../shared/global-constrants';\nimport { SignupComponent } from '../signup/signup.component';\nimport { ForgotPasswordComponent } from '../forgot-password/forgot-password.component';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n  loginForm: any = FormGroup;\n  responseMessage: any;\n\n  constructor(private formBuilder: FormBuilder, private router: Router,\n    private userServices: UserService, private snackbarservices: SnackbarService,\n    private dialogRef: MatDialogRef<SignupComponent>,\n    private ngxService: NgxUiLoaderService, private dialog: MatDialog) { }\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n   email: [null, [Validators.required, Validators.pattern(GlobalConstants.emailRegex)]],\n   password: [null, [Validators.required]],\n    })\n  }\n  ForgotPasswordAction() {\n\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = \"500px\";\n    this.dialog.open(ForgotPasswordComponent, dialogConfig);\n\n  }\n  signupAction() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = \"500px\";\n    this.dialog.open(SignupComponent, dialogConfig);\n  }\n  handleSubmit() {\n    this.ngxService.start();\n    var formData = this.loginForm.value\n    var data = {\n      email: formData.email,\n      password: formData.password\n\n    }\n    this.userServices.login(data).subscribe((Response:any)=>{\n      this.ngxService.stop();\n      this.dialogRef.close();\n   localStorage.setItem('token',Response.token);\n      this.router.navigate(['/cafe/dashboard']);\n\n    },(error)=>{\n      this.ngxService.stop();\n      if(error.error?.message){\n        this.responseMessage = error.error?.message;\n\n      }else{\n        this.responseMessage = GlobalConstants.genericError;\n\n      }\n      this.snackbarservices.openSnackbar(this.responseMessage,GlobalConstants.error);\n    })\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row fxlayout=\"row\">\n    <span class=\"tille-center\">Login</span>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-dialog-content class=\"mat-typography\">\n  <form [formGroup]=\"loginForm\">\n    <div fxFlex fxLayout=\"column\">\n      <mat-form-field appearance=\"fill\" fxFlex>\n        <mat-label>email</mat-label>\n        <input tabindex=\"1\" matInput formControlName=\"email\" required />\n        <mat-error\n          *ngIf=\"\n            loginForm.controls.email.touched && loginForm.controls.email.invalid\n          \"\n        >\n          <span *ngIf=\"loginForm.controls.email.errors.required\"\n            >This field is mandatory.\n          </span>\n          <span *ngIf=\"loginForm.controls.email.errors.pattern\"\n            >This field is invalid.\n          </span>\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" fxFlex>\n        <mat-label>Password</mat-label>\n        <input matInput tabindex=\"2\" formControlName=\"password\" required />\n        <mat-error\n          *ngIf=\"\n            loginForm.controls.password.touched &&\n            loginForm.controls.password.invalid\n          \"\n        >\n          <span *ngIf=\"loginForm.controls.password.errors.required\"\n            >This field is mandatory.\n          </span>\n          <span *ngIf=\"loginForm.controls.password.errors.pattern\"\n            >This field is invalid.\n          </span>\n        </mat-error>\n      </mat-form-field>\n    </div>\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"center\">\n  <button\n    mat-raised-button\n    color=\"primary\"\n    type=\"submit\"\n    (click)=\"handleSubmit()\"\n    tabindex=\"3\"\n    [disabled]=\"!(loginForm.valid && loginForm.dirty)\"\n  >\n    Login\n  </button>\n  <button mat-raised-button colour=\"primary\" mat-dialog-close tabindex=\"4\">\n    Close\n  </button>\n</mat-dialog-actions>\n<div>\n  <div>\n    <a\n      (click)=\"signupAction()\"\n      style=\"cursor: pointer\"\n      onmouseover=\"this.style.color='blue'\"\n      onmouseout=\"this.style.color='black'\"\n    >\n      Register</a\n    >\n  </div>\n  <div>\n    <a\n      (click)=\"ForgotPasswordAction()\"\n      style=\"cursor: pointer\"\n      onmouseover=\"this.style.color='blue'\"\n      onmouseout=\"this.style.color='black'\"\n    >\n      Forgot Password</a\n    >\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { Router } from '@angular/router';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { SnackbarService } from 'src/app/services/snackbar.service';\nimport { UserService } from 'src/app/services/user.service';\nimport { GlobalConstants } from 'src/app/shared/global-constrants';\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.scss']\n})\nexport class ChangePasswordComponent implements OnInit {\nchangePasswordForm :any = FormGroup;\nresponseMessage :any;\n\n  constructor(private formBuilder : FormBuilder,\n  private userServices : UserService,\n  public dialogRef : MatDialogRef<ChangePasswordComponent>,\n  private ngxServices : NgxUiLoaderService,\n  private snackbarServices : SnackbarService,private router :Router\n    ) { }\n\n  ngOnInit(): void {\n    this.changePasswordForm= this.formBuilder.group({\n      oldPassword : [null,[Validators.required]],\n      newPassword: [null,[Validators.required]],\n      confirmPassword : [null,[Validators.required]],\n    })\n  }\n\nvalidateSubmit(){\n  if(this.changePasswordForm.controls['newPassword'].value != this.changePasswordForm.controls['confirmPassword'].value){\n    return true;\n\n  }\n  else{\n    return false;\n  }\n}\n\nhandleChangePasswordSubmit(){\n  this.ngxServices.start();\n  var formData = this.changePasswordForm.value;\n  var data ={\n oldPassword :formData.oldPassword,\n newPassword :formData.newPassword,\n confirmPassword :formData.confirmPassword\n\n  }\n  this.userServices.changePassword(data).subscribe((response:any)=>{\n    this.ngxServices.stop();\n    this.dialogRef.close();\n    this.responseMessage = response?.message;\n    this.snackbarServices.openSnackbar(this.responseMessage,\"\");\n    this.router.navigate(['/']);\n\n  },(error)=>{\n    this.ngxServices.stop();\n    if(error.error?.message){\n      this.responseMessage = error.error?.message;\n\n    }else{\n      this.responseMessage = GlobalConstants.genericError;\n\n    }\n    this.snackbarServices.openSnackbar(this.responseMessage,GlobalConstants.error);\n  })\n}\n\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row fxlayout=\"row\">\n    <span class=\"tille-center\">Change Password?</span>\n  </mat-toolbar-row>\n</mat-toolbar>\n<br>\n<mat-dialog-content class=\"mat-typography\">\n  <form [formGroup]=\"changePasswordForm\">\n    <div fxFlex fxLayout=\"column\">\n\n      <mat-form-field appearance=\"fill\" fxFlex>\n        <mat-label>Old Password</mat-label>\n        <input type=\"password\" matInput formControlName=\"oldPassword\" required>\n        <mat-error *ngIf=\"changePasswordForm.controls.oldPassword.touched && changePasswordForm.controls.oldPassword.invalid\">\n          <span *ngIf=\"changePasswordForm.controls.oldPassword.errors.required\">This field is mandatory. </span>\n          <span *ngIf=\"changePasswordForm.controls.oldPassword.errors.pattern\">This field is invalid. </span>\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\" fxFlex>\n        <mat-label>New Password</mat-label>\n        <input type=\"password\" matInput formControlName=\"newPassword\" required>\n        <mat-error *ngIf=\"changePasswordForm.controls.newPassword.touched && changePasswordForm.controls.newPassword.invalid\">\n          <span *ngIf=\"changePasswordForm.controls.newPassword.errors.required\">This field is mandatory. </span>\n          <span *ngIf=\"changePasswordForm.controls.newPassword.errors.pattern\">This field is invalid. </span>\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\" fxFlex>\n        <mat-label>Confirm Password</mat-label>\n        <input type=\"password\" matInput formControlName=\"confirmPassword\" required>\n        <mat-error *ngIf=\"changePasswordForm.controls.confirmPassword.touched && changePasswordForm.controls.confirmPassword.invalid\">\n          <span *ngIf=\"changePasswordForm.controls.confirmPassword.errors.required\">This field is mandatory. </span>\n          <span *ngIf=\"changePasswordForm.controls.confirmPassword.errors.pattern\">This field is invalid. </span>\n        </mat-error>\n        <mat-hint *ngIf=\"validateSubmit()&& !(changePasswordForm.controls.confirmPassword.invalid)\">\n   <span>new Password and Confirm Password Does not match. </span>\n        </mat-hint>\n      </mat-form-field>\n    </div>\n\n  </form>\n</mat-dialog-content>\n<mat-dialog-actions align=\"center\">\n\n  <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"handleChangePasswordSubmit() \"\n    [disabled]=\"!(changePasswordForm.valid && changePasswordForm.dirty)\">Change Password </button>\n  <button mat-raised-button colour=\"primary\" mat-dialog-close>Close</button>\n\n</mat-dialog-actions>\n","import { Component, EventEmitter, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-confirmation',\n  templateUrl: './confirmation.component.html',\n  styleUrls: ['./confirmation.component.scss']\n})\nexport class ConfirmationComponent implements OnInit {\n\n  onEmitStatuschange =new EventEmitter();\ndetails:any= {};\n\n  constructor(@Inject(MAT_DIALOG_DATA) public dialogData:any) { }\n\n  ngOnInit(): void {\n  if(this.dialogData){\n    this.details = this.dialogData;\n\n  }\n}\n\nhandleChangeAction(){\n  this.onEmitStatuschange.emit();\n}\n\n}\n","<mat-dialog-content class=\"mat-typography\" >\n  <h5> Are you sure want to {{details.message}}?</h5>\n</mat-dialog-content>\n<mat-dialog-actions align=\"end\">\n  <button mat-raised-button color=\"primary\" (click)=\"handleChangeAction()\">Yes</button>\n  <button mat-raised-button mat-dialog-close>No</button>\n</mat-dialog-actions>\n","// services.component.ts\nimport { Component, OnInit } from '@angular/core';\nimport { OwlOptions } from 'ngx-owl-carousel-o';\n\n@Component({\n  selector: 'app-our-services',\n  templateUrl: './our-services.component.html',\n  styleUrls: ['./our-services.component.scss']\n})\nexport class OurServicesComponent implements OnInit {\n  services = [\n    {\n      icon: 'fa-th-large',\n      title: 'Category Management',\n      description: 'Streamline your business with efficient category organization. Perfect for inventory and product classification.',\n      features: [\n        'Hierarchical categorization',\n        'Category performance tracking',\n        'Easy category updates'\n      ],\n      images: [\n        'https://picsum.photos/1920/600?random=5',\n        'https://picsum.photos/1920/600?random=6',\n        'https://picsum.photos/1920/600?random=7',\n        'https://picsum.photos/1920/600?random=8'\n      ]\n    },\n    {\n      icon: 'fa-box',\n      title: 'Product Management',\n      description: 'Complete product lifecycle management with real-time tracking and analytics.',\n      features: [\n        'Inventory tracking',\n        'Price management',\n        'Delete Products'\n      ],\n      images: [\n        'https://picsum.photos/1920/600?random=9',\n        'https://picsum.photos/id/161/800/400',\n        'https://picsum.photos/1920/600?random=10',\n        'https://picsum.photos/id/162/800/400'\n      ]\n    },\n    {\n      icon: 'fa-file-invoice',\n      title: 'Billing System',\n      description: 'Fast and efficient billing system with comprehensive reporting capabilities.',\n      features: [\n        'Quick bill generation',\n        'Payment tracking',\n        'Financial reports'\n      ],\n      images: [\n        'https://picsum.photos/1920/600?random=11',\n        'https://picsum.photos/id/49/800/400',\n        'https://picsum.photos/1920/600?random=12',\n        'https://picsum.photos/id/50/800/400'\n      ]\n    }\n  ];\n\n  customOptions: OwlOptions = {\n    loop: true,\n    mouseDrag: true,\n    touchDrag: true,\n    pullDrag: false,\n    dots: true,\n    navSpeed: 700,\n    navText: ['<i class=\"fas fa-chevron-left\"></i>', '<i class=\"fas fa-chevron-right\"></i>'],\n    responsive: {\n      0: {\n        items: 1\n      }\n    },\n    nav: true,\n    autoplay: true,\n    autoplayTimeout: 5000,\n    autoplayHoverPause: true\n  };\n\n  constructor() { }\n\n  ngOnInit(): void { }\n}\n","<!-- Bootstrap 5 CSS -->\n<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\n<!-- Font Awesome -->\n<link href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.css\" rel=\"stylesheet\">\n\n<style>\n  .owl-nav,\n  .owl-prev,\n  .owl-next {\n    display: none !important;\n  }\n</style>\n<!-- services.component.html -->\n<section class=\"services-section py-5\" id=\"services\">\n  <div class=\"container\">\n    <!-- Services Header -->\n    <div class=\"text-center mb-5\">\n      <h2 class=\"text-uppercase fw-bold\">Enterprise Management Services</h2>\n      <div class=\"divider\"></div>\n    </div>\n\n    <!-- Service Items -->\n    <div *ngFor=\"let service of services; let i = index\"\n         class=\"service-item bg-white p-4 mb-5\">\n      <div class=\"row align-items-center\"\n           [class.flex-row-reverse]=\"i % 2 !== 0\">\n        <div class=\"col-md-6\">\n          <div class=\"service-content\">\n            <i class=\"fas {{service.icon}} service-icon\"></i>\n            <h2>{{service.title}}</h2>\n            <p>{{service.description}}</p>\n            <ul class=\"feature-list\">\n              <li *ngFor=\"let feature of service.features\">\n                {{feature}}\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div class=\"col-md-6\">\n          <div class=\"service-carousel\">\n            <owl-carousel-o [options]=\"customOptions\">\n              <ng-container *ngFor=\"let image of service.images\">\n                <ng-template carouselSlide>\n                  <div class=\"carousel-slide\">\n                    <div class=\"image-container\">\n                      <img [src]=\"image\"\n                           [alt]=\"service.title\"\n                           class=\"img-fluid rounded shadow\">\n                      <div class=\"overlay\">\n                        <h4>{{service.title}}</h4>\n                      </div>\n                    </div>\n                  </div>\n                </ng-template>\n              </ng-container>\n            </owl-carousel-o>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n\n<section class=\"contact-section py-5 bg-light\" id=\"contact\">\n  <div class=\"container\">\n    <div class=\"text-center mb-5\">\n      <h2 class=\"text-uppercase fw-bold\">Contact Us</h2>\n      <p class=\"text-muted\">Get in touch with our team</p>\n    </div>\n\n    <div class=\"row justify-content-center\">\n      <div class=\"col-md-8\">\n        <form class=\"contact-form\">\n          <div class=\"row g-3\">\n            <div class=\"col-md-6\">\n              <input type=\"text\" class=\"form-control\" placeholder=\"Your Name *\" required>\n            </div>\n            <div class=\"col-md-6\">\n              <input type=\"email\" class=\"form-control\" placeholder=\"Your Email *\" required>\n            </div>\n            <div class=\"col-md-12\">\n              <input type=\"tel\" class=\"form-control\" placeholder=\"Your Phone *\" required>\n            </div>\n            <div class=\"col-md-12\">\n              <textarea class=\"form-control\" rows=\"5\" placeholder=\"Your Message *\" required></textarea>\n            </div>\n            <div class=\"col-12 text-center\">\n              <button type=\"submit\" class=\"btn btn-primary px-5\">Send Message</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</section>\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private router: Router) { }\n\n  public isAuthenticated(): boolean {\n    const token = localStorage.getItem('token');\n    if(!token) {\n      this.router.navigate(['/']);\n      return false;\n    }\n    else{\n      return true;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AuthService } from './auth.service';\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\nimport { SnackbarService } from './snackbar.service';\nimport { jwtDecode } from 'jwt-decode';\nimport { GlobalConstants } from '../shared/global-constrants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RouteGuardService {\n\n  constructor(public auth: AuthService,\n    public router: Router,\n    private snackBarServices: SnackbarService) { }\n\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n    let expectedRoleArray = route.data;\n    expectedRoleArray = expectedRoleArray.expectedRole;\n\n    const token: any = localStorage.getItem('token');\n    var tokenPayload: any;\n    try {\n      tokenPayload = jwtDecode(token);\n    }\n    catch (err) {\n      localStorage.clear();\n      this.router.navigate(['/']);\n    }\n\n    let checkRole = false;\n\n    for (let i = 0; i < expectedRoleArray.length; i++) {\n      if (expectedRoleArray[i] == tokenPayload.role) {\n        checkRole = true;\n      }\n    }\n    if (tokenPayload.role == 'user' || tokenPayload.role == 'admin') {\n      if (this.auth.isAuthenticated() && checkRole) {\n        return true;\n      }\n      this.snackBarServices.openSnackbar(GlobalConstants.unauthroized, GlobalConstants.error);\n      this.router.navigate(['/cafe/dashboard']);\n      return false;\n    }\n    else {\n      this.router.navigate(['/'])\n      localStorage.clear();\n      return false;\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SnackbarService {\n\n  constructor(private snackbar : MatSnackBar) { }\n\n  openSnackbar(message: string,action: string) {\n    if(action === 'error'){\n      this.snackbar.open(message,'',{\n        horizontalPosition: 'center',\n        verticalPosition: 'top',\n        duration :2000,\n        panelClass :['black-snackbar']\n      });\n    }\n    else{\n      this.snackbar.open(message,'',{\n        horizontalPosition: 'center',\n        verticalPosition: 'top',\n        duration :2000,\n        panelClass :['green-snackbar']\n      });\n    }\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Http2ServerResponse } from 'http2';\nimport { catchError } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable()\nexport class TokenInterceptorInterceptor implements HttpInterceptor {\n\n\n  constructor(private router: Router) { }\n\n  intercept(request: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n\n    const token = localStorage.getItem('token');\n    if (token) {\n      request = request.clone({\n        setHeaders: { Authorization: `Bearer ${token}` }\n      })\n    }\n\n    return next.handle(request).pipe(\n      catchError((err) => {\n        if (err instanceof HttpErrorResponse) {\n          console.log(err);\n          if (err.status === 401 || err.status === 403) {\n            if (this.router.url === '/') {\n\n            }\n            else {\n              localStorage.clear();\n              this.router.navigate(['/'])\n            }\n          }\n        }\n        return throwError(err);\n      })\n    )\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from '../../environments/environment';\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  private url: string = environment.apiUrl;\n\n  constructor(private httpClient: HttpClient) { }\n\n  signUp(data: any) {\n    return this.httpClient.post(this.url + \"/user/signup\", data,\n      {\n        headers: new HttpHeaders().set('Content-Type', 'application/json')\n\n      })\n  }\n\n\n  forgotPassword(data: any) {\n    return this.httpClient.post(this.url +\n      \"/user/forgotPassword/\", data, {\n      headers: new HttpHeaders().set('Content-Type', 'application/json')\n    })\n\n  }\n\n  changePassword(data: any) {\n    return this.httpClient.post(this.url +\n      \"/user/changePassword/\", data, {\n      headers: new HttpHeaders().set('Content-Type', 'application/json')\n    })\n\n  }\n\n  login(data: any) {\n    return this.httpClient.post(this.url +\n      \"/user/login/\", data, {\n      headers: new HttpHeaders().set('Content-Type', 'application/json')\n    })\n\n  }\n  checkToken(){\n    return this.httpClient.get(this.url + \"/user\");\n  }\n\n  getUser(){\n    return this.httpClient.get(this.url + \"/user/get\");\n  }\n\n  update(data:any){\n    return this.httpClient.patch(this.url+\n      \"/user/update\",data,{\n        headers: new HttpHeaders().set('Content-Type', 'application/json')\n      })\n  }\n}\n","import {\n  Directive,\n  OnInit,\n  AfterViewInit,\n  AfterContentChecked\n} from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\nimport { AccordionLinkDirective } from './accordionlink.directive';\nimport { filter } from 'rxjs/operators';\n\n@Directive({\n  selector: '[appAccordion]'\n})\nexport class AccordionDirective implements AfterContentChecked {\n  protected navlinks: Array<AccordionLinkDirective> = [];\n\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\n      if (link !== selectedLink) {\n        link.selected = false;\n      }\n    });\n  }\n\n  addLink(link: AccordionLinkDirective): void {\n    this.navlinks.push(link);\n  }\n\n  removeGroup(link: AccordionLinkDirective): void {\n    const index = this.navlinks.indexOf(link);\n    if (index !== -1) {\n      this.navlinks.splice(index, 1);\n    }\n  }\n\n  checkOpenLinks() {\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\n      if (link.group) {\n        const routeUrl = this.router.url;\n        const currentUrl = routeUrl.split('/');\n        if (currentUrl.indexOf(link.group) > 0) {\n          link.selected = true;\n          this.closeOtherLinks(link);\n        }\n      }\n    });\n  }\n\n  ngAfterContentChecked(): void {\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe(e => this.checkOpenLinks());\n  }\n\n  constructor(private router: Router) {\n    setTimeout(() => this.checkOpenLinks());\n  }\n}\n","import { Directive, HostListener, Inject } from '@angular/core';\n\nimport { AccordionLinkDirective } from './accordionlink.directive';\n\n@Directive({\n  selector: '[appAccordionToggle]'\n})\nexport class AccordionAnchorDirective {\n  protected navlink: AccordionLinkDirective;\n\n  constructor(@Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\n    this.navlink = navlink;\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(e: any) {\n    this.navlink.toggle();\n  }\n}\n","import {\n  Directive,\n  HostBinding,\n  Inject,\n  Input,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\n\nimport { AccordionDirective } from './accordion.directive';\n\n@Directive({\n  selector: '[appAccordionLink]'\n})\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\n  @Input()\n  public group: any;\n\n  @HostBinding('class.selected')\n  @Input()\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  set selected(value: boolean) {\n    this._selected = value;\n    if (value) {\n      this.nav.closeOtherLinks(this);\n    }\n  }\n\n  protected _selected: boolean=false;\n  protected nav: AccordionDirective;\n\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\n    this.nav = nav;\n  }\n\n  ngOnInit(): any {\n    this.nav.addLink(this);\n  }\n\n  ngOnDestroy(): any {\n    this.nav.removeGroup(this);\n  }\n\n  toggle(): any {\n    this.selected = !this.selected;\n  }\n}\n","export * from './accordionanchor.directive';\nexport * from './accordionlink.directive';\nexport * from './accordion.directive';\n","export class GlobalConstants\n{\n//message\npublic static genericError:string = \"something went wrong , please try again later .\";\n\npublic static unauthroized : string = \"you are not authorized persion to access this page\"\n\npublic static productExistError: string = \"product already exists\";\n\npublic static productAdded : string = \"Product Added successfully\";\n\n//rejax\n\npublic static nameRegex :string =\"[a-zA-Z0-9]*\";\n\npublic static emailRegex :string =\"[A-Za-z0-9._%-]+@[A-Za-z0-9._%-]+\\\\.[a-z]{2,3}\";\n\npublic static contactNumberRegex :string =\"[e0-9]{10,10}$\";\n\n//variable\n\npublic static error : string =\"error\";\n\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n import { NgModule } from '@angular/core';\n import { MatAutocompleteModule } from '@angular/material/autocomplete';\n import { MatButtonModule } from '@angular/material/button';\n import { MatButtonToggleModule } from '@angular/material/button-toggle';\n import { MatCardModule } from '@angular/material/card';\n import { MatCheckboxModule } from '@angular/material/checkbox';\n import { MatChipsModule } from '@angular/material/chips';\n import { MatDatepickerModule } from '@angular/material/datepicker';\n import { MatDialogModule } from '@angular/material/dialog';\n import { MatExpansionModule } from '@angular/material/expansion';\n import { MatFormFieldModule } from '@angular/material/form-field';\n import { MatGridListModule } from '@angular/material/grid-list';\n import { MatIconModule } from '@angular/material/icon';\n import { MatInputModule } from '@angular/material/input';\n import { MatListModule } from '@angular/material/list';\n import { MatMenuModule } from '@angular/material/menu';\n import { MatPaginatorModule } from '@angular/material/paginator';\n import { MatProgressBarModule } from '@angular/material/progress-bar';\n import { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n import { MatRadioModule } from '@angular/material/radio';\n import { MatSelectModule } from '@angular/material/select';\n import { MatSidenavModule } from '@angular/material/sidenav';\n import { MatSliderModule } from '@angular/material/slider';\n import { MatSlideToggleModule } from '@angular/material/slide-toggle';\n import { MatSnackBarModule } from '@angular/material/snack-bar';\n import { MatSortModule } from '@angular/material/sort';\n import { MatTableModule } from '@angular/material/table';\n import { MatTabsModule } from '@angular/material/tabs';\n import { MatToolbarModule } from '@angular/material/toolbar';\n import { MatTooltipModule } from '@angular/material/tooltip';\n import { MatStepperModule } from '@angular/material/stepper';\n import { MatBadgeModule } from '@angular/material/badge';\n import { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\n import { MatBottomSheetModule } from '@angular/material/bottom-sheet';\n \n import { CdkTableModule } from '@angular/cdk/table';\n import { CdkAccordionModule } from '@angular/cdk/accordion';\n import { A11yModule } from '@angular/cdk/a11y';\n import { BidiModule } from '@angular/cdk/bidi';\n import { OverlayModule } from '@angular/cdk/overlay';\n import { PlatformModule } from '@angular/cdk/platform';\n import { ObserversModule } from '@angular/cdk/observers';\n import { PortalModule } from '@angular/cdk/portal';\n \n /**\n  * NgModule that includes all Material modules that are required to serve the demo-app.\n  */\n @NgModule({\n     exports: [\n         MatAutocompleteModule,\n         MatButtonModule,\n         MatBottomSheetModule,\n         MatButtonToggleModule,\n         MatCardModule,\n         MatCheckboxModule,\n         MatChipsModule,\n         MatTableModule,\n         MatDatepickerModule,\n         MatDialogModule,\n         MatExpansionModule,\n         MatFormFieldModule,\n         MatGridListModule,\n         MatIconModule,\n         MatInputModule,\n         MatListModule,\n         MatMenuModule,\n         MatPaginatorModule,\n         MatProgressBarModule,\n         MatProgressSpinnerModule,\n         MatRadioModule,\n         MatRippleModule,\n         MatSelectModule,\n         MatBadgeModule,\n         MatSidenavModule,\n         MatSlideToggleModule,\n         MatSliderModule,\n         MatSnackBarModule,\n         MatSortModule,\n         MatStepperModule,\n         MatTabsModule,\n         MatToolbarModule,\n         MatTooltipModule,\n         MatNativeDateModule,\n         CdkTableModule,\n         A11yModule,\n         BidiModule,\n         CdkAccordionModule,\n         ObserversModule,\n         OverlayModule,\n         PlatformModule,\n         PortalModule\n     ]\n })\n export class MaterialModule { }\n ","import { Injectable, inject } from \"@angular/core\";\n\nexport interface Menu {\n  state: string;\n  name: string;\n  icon: string;\n  role: string;\n\n}\n\nconst MENUITEMS = [\n  { state: 'dashboard', name: 'dashboard', icon: 'dashboard', role: '' },\n  { state: 'Category', name: 'manage Category', icon: 'category', role: 'admin' },\n  { state: 'Product', name: 'manage Product', icon: 'inventory_2', role: 'admin' },\n  { state: 'order', name: 'manage Order', icon: 'list_alt', role:'' },\n  { state: 'bill', name: 'View Bill', icon: 'import_contacts', role:'' },\n  { state: 'user', name: 'View User', icon: 'people', role:'admin' }\n\n];\n\n@Injectable()\nexport class MenuItems {\n  getMenuitems(): Menu[] {\n    return MENUITEMS;\n\n  }\n}\n\n","import { NgModule } from '@angular/core';\n\nimport { AccordionAnchorDirective, AccordionLinkDirective, AccordionDirective } from './accordion';\nimport { MenuItems } from './menu-items';\n\n\n@NgModule({\n  declarations: [\n    AccordionAnchorDirective,\n    AccordionLinkDirective,\n    AccordionDirective\n  ],\n  exports: [\n    AccordionAnchorDirective,\n    AccordionLinkDirective,\n    AccordionDirective\n   ],\n  providers: [MenuItems ]\n})\nexport class SharedModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Route, Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { SnackbarService } from '../services/snackbar.service';\nimport { MatDialog, MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { GlobalConstants } from '../shared/global-constrants';\nimport { NgxUiLoaderService } from 'ngx-ui-loader';\nimport { time } from 'console';\nimport { LoginComponent } from '../login/login.component';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  signupForm: any = FormGroup;\n  responseMessage: any;\n\n  constructor(private formBuilder: FormBuilder, private router: Router,\n    private userServices: UserService, private snackbarservices: SnackbarService,\n    private dialogRef: MatDialogRef<SignupComponent>,\n    private ngxService: NgxUiLoaderService, private dialog: MatDialog) {}\n  ngOnInit(): void {\n    this.signupForm = this.formBuilder.group({\n      name: [null, [Validators.required, Validators.pattern(/^[a-zA-Z]+(?: [a-zA-Z]+)*$/)]],\n      email: [null, [Validators.required, Validators.pattern(GlobalConstants.emailRegex)]],\n      contactNumber: [null, [Validators.required, Validators.pattern(GlobalConstants.contactNumberRegex)]],\n      password: [null, [Validators.required]],\n    })\n  }\n  loginAction() {\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.width = \"500px\";\n    this.dialog.open(LoginComponent, dialogConfig);\n  }\n  handleSubmit() {\n    this.ngxService.start();\n    var formData = this.signupForm.value\n    var data = {\n      name: formData.name,\n      email: formData.email,\n      contactNumber: formData.contactNumber,\n      password: formData.password\n\n    }\n    this.userServices.signUp(data).subscribe((Response:any)=>{\n      this.ngxService.stop();\n      this.dialogRef.close();\n      this.responseMessage = Response?.message;\n      this.snackbarservices.openSnackbar(this.responseMessage,\"\");\n      this.router.navigate(['/']);\n\n    },(error)=>{\n      this.ngxService.stop();\n      if(error.error?.message){\n        this.responseMessage = error.error?.message;\n\n      }else{\n        this.responseMessage = GlobalConstants.genericError;\n\n      }\n      this.snackbarservices.openSnackbar(this.responseMessage,GlobalConstants.error);\n    })\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n  <mat-toolbar-row fxlayout=\"row\">\n    <span class=\"tille-center\">Register</span>\n  </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-dialog-content class=\"mat-typography\">\n  <form [formGroup]=\"signupForm\">\n    <div fxFlex fxLayout=\"column\">\n\n      <mat-form-field appearance=\"fill\" fxFlex>\n        <mat-label>name</mat-label>\n        <input matInput formControlName=\"name\" required>\n        <mat-error *ngIf=\"signupForm.controls.name.touched && signupForm.controls.name.invalid\">\n          <span *ngIf=\"signupForm.controls.name.errors.required\">This field is mandatory. </span>\n          <span *ngIf=\"signupForm.controls.name.errors.pattern\">This field is invalid. </span>\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" fxFlex>\n        <mat-label>email</mat-label>\n        <input matInput formControlName=\"email\" required>\n        <mat-error *ngIf=\"signupForm.controls.email.touched && signupForm.controls.email.invalid\">\n          <span *ngIf=\"signupForm.controls.email.errors.required\">This field is mandatory. </span>\n          <span *ngIf=\"signupForm.controls.email.errors.pattern\">This field is invalid. </span>\n        </mat-error>\n      </mat-form-field>\n\n      <mat-form-field appearance=\"fill\" fxFlex>\n        <mat-label>contact Number</mat-label>\n        <input matInput formControlName=\"contactNumber\" required>\n        <mat-error *ngIf=\"signupForm.controls.contactNumber.touched && signupForm.controls.contactNumber.invalid\">\n          <span *ngIf=\"signupForm.controls.contactNumber.errors.required\">This field is mandatory. </span>\n          <span *ngIf=\"signupForm.controls.contactNumber.errors.pattern\">This field is invalid. </span>\n        </mat-error>\n      </mat-form-field>\n      <mat-form-field appearance=\"fill\" fxFlex>\n        <mat-label>Password</mat-label>\n        <input matInput formControlName=\"password\" required>\n        <mat-error *ngIf=\"signupForm.controls.password.touched && signupForm.controls.password.invalid\">\n          <span *ngIf=\"signupForm.controls.password.errors.required\">This field is mandatory. </span>\n          <span *ngIf=\"signupForm.controls.password.errors.pattern\">This field is invalid. </span>\n        </mat-error>\n      </mat-form-field>\n\n    </div>\n\n  </form>\n</mat-dialog-content>\n\n<mat-dialog-actions align=\"center\">\n\n  <button mat-raised-button color=\"primary\" type=\"submit\" (click)=\"handleSubmit() \"\n    [disabled]=\"!(signupForm.valid && signupForm.dirty)\">Register</button>\n  <button mat-raised-button colour=\"primary\" mat-dialog-close>Close</button>\n\n</mat-dialog-actions>\n\n<div style=\"margin-top: 10px; text-align: center;\">\n  <span>If you are already Register ?</span>\n  <a (click)=\"loginAction()\" style=\"cursor: pointer\"\n     onmouseover=\"this.style.color='blue'\"\n     onmouseout=\"this.style.color='black'\"> Login</a>\n</div>\n\n","export const environment = {\n  production: false,\n  apiUrl: 'https://enterprises-dashboard-api-evg5.vercel.app'  // Your development API URL\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}